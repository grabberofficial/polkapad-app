{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multisig_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "burner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dotContract_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dotFeedContract_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "plpdContract_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "whitelistContract_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burned",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "polkadotAddress",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_burnBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_burner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_canBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_dotContract",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_dotPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_locks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_multisig",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_plpdContract",
      "outputs": [
        {
          "internalType": "contract PolkapadERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_plpdPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_polkadotAddresses",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_whitelistContract",
      "outputs": [
        {
          "internalType": "contract Whitelist",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activateBurning",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses_",
          "type": "address[]"
        }
      ],
      "name": "burnPlpd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "allocation_",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setPlpdPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
    "4": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
    "5": "/Users/droppenheimer/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "6": "contracts/Locker.sol",
    "7": "contracts/PolkapadERC20.sol",
    "8": "contracts/Whitelist.sol"
  },
  "ast": {
    "absolutePath": "contracts/Locker.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1304
      ],
      "Context": [
        1722
      ],
      "ERC20": [
        946
      ],
      "IERC20": [
        1675
      ],
      "IERC20Metadata": [
        1700
      ],
      "Locker": [
        360
      ],
      "PolkapadERC20": [
        1426
      ],
      "SafeMath": [
        1258
      ],
      "Whitelist": [
        1597
      ]
    },
    "id": 361,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 947,
        "src": "58:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1259,
        "src": "114:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/droppenheimer/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.2.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1305,
        "src": "172:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/PolkapadERC20.sol",
        "file": "./PolkapadERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1427,
        "src": "249:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Whitelist.sol",
        "file": "./Whitelist.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 361,
        "sourceUnit": 1598,
        "src": "279:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Locker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 360,
        "linearizedBaseContracts": [
          360
        ],
        "name": "Locker",
        "nameLocation": "315:6:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 9,
            "libraryName": {
              "id": 7,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1258,
              "src": "334:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "328:27:6",
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "25ecc79f",
            "id": 13,
            "mutability": "mutable",
            "name": "_locks",
            "nameLocation": "397:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "361:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "370:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "361:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f080da1a",
            "id": 17,
            "mutability": "mutable",
            "name": "_polkadotAddresses",
            "nameLocation": "445:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "409:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "418:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "409:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 15,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "429:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "161188b6",
            "id": 20,
            "mutability": "mutable",
            "name": "_dotContract",
            "nameLocation": "493:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "470:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$946",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 946,
                "src": "470:5:6"
              },
              "referencedDeclaration": 946,
              "src": "470:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$946",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff5fcbc3",
            "id": 23,
            "mutability": "mutable",
            "name": "_plpdContract",
            "nameLocation": "534:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "511:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
              "typeString": "contract PolkapadERC20"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "PolkapadERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1426,
                "src": "511:13:6"
              },
              "referencedDeclaration": 1426,
              "src": "511:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                "typeString": "contract PolkapadERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f64480d0",
            "id": 26,
            "mutability": "mutable",
            "name": "_whitelistContract",
            "nameLocation": "576:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "553:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1597",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 25,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1597,
                "src": "553:9:6"
              },
              "referencedDeclaration": 1597,
              "src": "553:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1597",
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a68b5198",
            "id": 29,
            "mutability": "mutable",
            "name": "_dotPriceFeed",
            "nameLocation": "630:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "601:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1304,
                "src": "601:21:6"
              },
              "referencedDeclaration": 1304,
              "src": "601:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8fd40d32",
            "id": 31,
            "mutability": "mutable",
            "name": "_multisig",
            "nameLocation": "665:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "650:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "610936b9",
            "id": 33,
            "mutability": "mutable",
            "name": "_burner",
            "nameLocation": "695:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "680:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "680:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d4dc542c",
            "id": 35,
            "mutability": "mutable",
            "name": "_canBurn",
            "nameLocation": "721:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "709:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "709:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "56316b5d",
            "id": 37,
            "mutability": "mutable",
            "name": "_burnBlockNumber",
            "nameLocation": "747:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "735:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "735:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da073dc7",
            "id": 39,
            "mutability": "mutable",
            "name": "_plpdPrice",
            "nameLocation": "785:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 360,
            "src": "770:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "770:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "91041d6c7a6291cc5133c2d75e882eab111ebfd14edb82460a95c2835e017e74",
            "id": 47,
            "name": "Locked",
            "nameLocation": "808:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "831:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "815:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "polkadotAddress",
                  "nameLocation": "847:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "840:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allocation",
                  "nameLocation": "872:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "864:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:69:6"
            },
            "src": "802:82:6"
          },
          {
            "anonymous": false,
            "eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
            "id": 53,
            "name": "Burned",
            "nameLocation": "895:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "918:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "902:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burned",
                  "nameLocation": "935:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "927:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:41:6"
            },
            "src": "889:54:6"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1146:290:6",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "_multisig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1156:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "multisig_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1168:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1156:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:21:6"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "_burner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1187:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73,
                      "name": "burner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1197:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1187:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1187:17:6"
                },
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "_plpdContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1215:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                        "typeString": "contract PolkapadERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 78,
                          "name": "plpdContract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1245:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "name": "PolkapadERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1426,
                        "src": "1231:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PolkapadERC20_$1426_$",
                          "typeString": "type(contract PolkapadERC20)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1231:28:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                        "typeString": "contract PolkapadERC20"
                      }
                    },
                    "src": "1215:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                      "typeString": "contract PolkapadERC20"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:44:6"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "_dotContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1269:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$946",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84,
                          "name": "dotContract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1290:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 83,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "1284:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$946_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1284:19:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$946",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1269:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$946",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:34:6"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "_whitelistContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1313:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1597",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 90,
                          "name": "whitelistContract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "1344:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89,
                        "name": "Whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "1334:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Whitelist_$1597_$",
                          "typeString": "type(contract Whitelist)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1334:29:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1597",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "1313:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1597",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:50:6"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "_dotPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1374:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 96,
                          "name": "dotFeedContract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1412:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 95,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "1390:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$1304_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1390:39:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1374:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:55:6"
                }
              ]
            },
            "id": 101,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "multisig_",
                  "nameLocation": "978:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "970:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "burner_",
                  "nameLocation": "1005:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "997:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "dotContract_",
                  "nameLocation": "1030:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1022:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "dotFeedContract_",
                  "nameLocation": "1061:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1053:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "plpdContract_",
                  "nameLocation": "1095:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1087:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "whitelistContract_",
                  "nameLocation": "1126:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1118:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:185:6"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:6"
            },
            "scope": 360,
            "src": "949:487:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1463:85:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 106,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1510:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1510:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 104,
                              "name": "_whitelistContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1481:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$1597",
                                "typeString": "contract Whitelist"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "whitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1432,
                            "src": "1481:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1525:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1481:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1473:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:57:6"
                },
                {
                  "id": 113,
                  "nodeType": "PlaceholderStatement",
                  "src": "1540:1:6"
                }
              ]
            },
            "id": 115,
            "name": "whitelisted",
            "nameLocation": "1451:11:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1463:0:6"
            },
            "src": "1442:106:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "1572:60:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1590:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1590:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 120,
                          "name": "_multisig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1604:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1590:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1582:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:32:6"
                },
                {
                  "id": 124,
                  "nodeType": "PlaceholderStatement",
                  "src": "1624:1:6"
                }
              ]
            },
            "id": 126,
            "name": "multisig",
            "nameLocation": "1563:8:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:0:6"
            },
            "src": "1554:78:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "1654:58:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1672:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1672:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 131,
                          "name": "_burner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1686:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1672:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1664:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:30:6"
                },
                {
                  "id": 135,
                  "nodeType": "PlaceholderStatement",
                  "src": "1704:1:6"
                }
              ]
            },
            "id": 137,
            "name": "burner",
            "nameLocation": "1647:6:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:6"
            },
            "src": "1638:74:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "1772:968:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 145,
                          "name": "_canBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "1790:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1802:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1790:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b65723a20596f752063616e6e6f74206c6f636b20617420746865206d6f6d656e74",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1809:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af3a5c347d0e4198ce094d5c275374b143102522f5155c7669696d941100efb8",
                          "typeString": "literal_string \"Locker: You cannot lock at the moment\""
                        },
                        "value": "Locker: You cannot lock at the moment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af3a5c347d0e4198ce094d5c275374b143102522f5155c7669696d941100efb8",
                          "typeString": "literal_string \"Locker: You cannot lock at the moment\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1782:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:67:6"
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "dotPrice",
                      "nameLocation": "1868:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "1860:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1860:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153,
                      "name": "getLatestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "1879:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1879:16:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1860:35:6"
                },
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "lockedAllocation",
                      "nameLocation": "1914:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "1906:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1906:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "baseExpression": {
                      "id": 158,
                      "name": "_locks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1933:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 161,
                    "indexExpression": {
                      "expression": {
                        "id": 159,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1940:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1940:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1933:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1906:45:6"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "allocationInUsdt",
                      "nameLocation": "1969:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "1961:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1961:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 170,
                          "name": "dotPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "2026:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 167,
                              "name": "allocation_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2009:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 165,
                              "name": "lockedAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "1988:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1122,
                            "src": "1988:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1988:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1152,
                        "src": "1988:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1988:47:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2038:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1988:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1961:81:6"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "maxAllocationSize",
                      "nameLocation": "2061:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2053:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2053:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 182,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2116:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2116:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 177,
                        "name": "_whitelistContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2081:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$1597",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allocationSizes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1436,
                      "src": "2081:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2053:74:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 183,
                      "name": "maxAllocationSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "2141:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2162:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2141:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 193,
                  "nodeType": "IfStatement",
                  "src": "2137:115:6",
                  "trueBody": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "2165:87:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 186,
                            "name": "maxAllocationSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "2179:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 187,
                                "name": "_whitelistContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2199:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1597",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "defaultAllocationSize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "2199:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2199:42:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2179:62:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "2179:62:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "allocationInUsdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2283:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 196,
                          "name": "maxAllocationSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "2302:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2283:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b65723a20796f752063616e6e6f7420616c6c6f63617465206d6f7265207468616e206d617820616c6c6f636174696f6e2076616c7565",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2333:60:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce250fd73dbc35437d5d44f700added299b39c60f5fd2da7bc727e6b52a5f7dc",
                          "typeString": "literal_string \"Locker: you cannot allocate more than max allocation value\""
                        },
                        "value": "Locker: you cannot allocate more than max allocation value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce250fd73dbc35437d5d44f700added299b39c60f5fd2da7bc727e6b52a5f7dc",
                          "typeString": "literal_string \"Locker: you cannot allocate more than max allocation value\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2262:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:132:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:132:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2431:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2431:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 206,
                        "name": "_multisig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2443:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 207,
                        "name": "allocation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2454:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 201,
                        "name": "_dotContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2405:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$946",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 560,
                      "src": "2405:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2405:61:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:61:6"
                },
                {
                  "assignments": [
                    211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "plpdAmount",
                      "nameLocation": "2485:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2477:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 214,
                          "name": "_plpdPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2519:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 212,
                          "name": "allocationInUsdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "2498:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1152,
                        "src": "2498:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2498:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2533:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "2498:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2477:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2566:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2566:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 224,
                        "name": "plpdAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2578:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 219,
                        "name": "_plpdContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2547:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                          "typeString": "contract PolkapadERC20"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "2547:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:42:6"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "_locks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2600:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "expression": {
                          "id": 228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2607:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2607:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2600:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 233,
                          "name": "allocation_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "2642:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 231,
                          "name": "lockedAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2621:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1122,
                        "src": "2621:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2621:33:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2600:54:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:54:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2677:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2677:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 240,
                          "name": "_polkadotAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2689:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                            "typeString": "mapping(address => string storage ref)"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "expression": {
                            "id": 241,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2708:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2708:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2689:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 244,
                        "name": "allocation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2721:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 237,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2670:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2670:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "EmitStatement",
                  "src": "2665:68:6"
                }
              ]
            },
            "functionSelector": "dd467064",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 141,
                  "name": "whitelisted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 115,
                  "src": "1760:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1760:11:6"
              }
            ],
            "name": "lock",
            "nameLocation": "1727:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "allocation_",
                  "nameLocation": "1740:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "1732:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:21:6"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:0:6"
            },
            "scope": 360,
            "src": "1718:1022:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "2799:35:6",
              "statements": [
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 255,
                      "name": "_plpdPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2809:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 256,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "2822:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2809:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:18:6"
                }
              ]
            },
            "functionSelector": "b33e40b5",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 252,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 126,
                  "src": "2790:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2790:8:6"
              }
            ],
            "name": "setPlpdPrice",
            "nameLocation": "2755:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2776:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "2768:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2767:15:6"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2799:0:6"
            },
            "scope": 360,
            "src": "2746:88:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2883:78:6",
              "statements": [
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 265,
                      "name": "_canBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2893:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2904:9:6",
                      "subExpression": {
                        "id": 266,
                        "name": "_canBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "2905:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2893:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2893:20:6"
                },
                {
                  "expression": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 270,
                      "name": "_burnBlockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2923:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 271,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2942:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2942:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2923:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:31:6"
                }
              ]
            },
            "functionSelector": "edca14d3",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 262,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 126,
                  "src": "2874:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2874:8:6"
              }
            ],
            "name": "activateBurning",
            "nameLocation": "2849:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2864:2:6"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2883:0:6"
            },
            "scope": 360,
            "src": "2840:121:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "3028:348:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 285,
                          "name": "_canBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "3046:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3058:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3046:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3038:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:25:6"
                },
                {
                  "body": {
                    "id": 326,
                    "nodeType": "Block",
                    "src": "3130:240:6",
                    "statements": [
                      {
                        "assignments": [
                          302
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 302,
                            "mutability": "mutable",
                            "name": "address_",
                            "nameLocation": "3152:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 326,
                            "src": "3144:16:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3144:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 306,
                        "initialValue": {
                          "baseExpression": {
                            "id": 303,
                            "name": "addresses_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3163:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 305,
                          "indexExpression": {
                            "id": 304,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3174:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3163:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3144:32:6"
                      },
                      {
                        "assignments": [
                          308
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 308,
                            "mutability": "mutable",
                            "name": "plpdAmount",
                            "nameLocation": "3211:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 326,
                            "src": "3203:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 307,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3203:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 313,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 311,
                              "name": "address_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "3248:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 309,
                              "name": "_plpdContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "3224:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                                "typeString": "contract PolkapadERC20"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 459,
                            "src": "3224:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3224:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3203:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 317,
                              "name": "address_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "3290:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 318,
                              "name": "plpdAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3300:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 314,
                              "name": "_plpdContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "3271:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolkapadERC20_$1426",
                                "typeString": "contract PolkapadERC20"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1383,
                            "src": "3271:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3271:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3271:40:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 322,
                              "name": "address_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "3338:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 323,
                              "name": "plpdAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3348:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 321,
                            "name": "Burned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "3331:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3331:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 325,
                        "nodeType": "EmitStatement",
                        "src": "3326:33:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 294,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "3102:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 295,
                        "name": "addresses_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3106:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3106:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3102:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "initializationExpression": {
                    "assignments": [
                      291
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3095:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "3087:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3087:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 293,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3099:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3087:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3125:3:6",
                      "subExpression": {
                        "id": 298,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "3125:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 300,
                    "nodeType": "ExpressionStatement",
                    "src": "3125:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "3082:288:6"
                }
              ]
            },
            "functionSelector": "7f70fad9",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "burner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 137,
                  "src": "3021:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3021:6:6"
              }
            ],
            "name": "burnPlpd",
            "nameLocation": "2976:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "addresses_",
                  "nameLocation": "3002:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 329,
                  "src": "2985:27:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 277,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2985:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 278,
                    "nodeType": "ArrayTypeName",
                    "src": "2985:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:29:6"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3028:0:6"
            },
            "scope": 360,
            "src": "2967:409:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "3438:369:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    335,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3498:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3494:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3494:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 339,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 336,
                        "name": "_dotPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "3620:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$1304",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1303,
                      "src": "3620:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3448:203:6"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "adjustedDecimals",
                      "nameLocation": "3670:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3662:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3662:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31653138",
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3689:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3696:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "3689:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3662:37:6"
                },
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nameLocation": "3717:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3709:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3709:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 355,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 353,
                        "name": "adjustedDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3752:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 350,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3741:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3733:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 348,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3733:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3733:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "3733:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3733:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3709:60:6"
                },
                {
                  "expression": {
                    "id": 356,
                    "name": "adjustedPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 347,
                    "src": "3787:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 333,
                  "id": 357,
                  "nodeType": "Return",
                  "src": "3780:20:6"
                }
              ]
            },
            "functionSelector": "8e15f473",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "3391:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:2:6"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "3429:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3429:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3428:9:6"
            },
            "scope": 360,
            "src": "3382:425:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 361,
        "src": "306:3503:6",
        "usedErrors": []
      }
    ],
    "src": "33:3777:6"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405162000ed838038062000ed8833981016040819052610031916100c0565b600680546001600160a01b03199081166001600160a01b039889161790915560078054821696881696909617909555600380548616928716929092179091556002805485169386169390931790925560048054841692851692909217909155600580549092169216919091179055610134565b80516001600160a01b03811681146100bb57600080fd5b919050565b60008060008060008060c087890312156100d957600080fd5b6100e2876100a4565b95506100f0602088016100a4565b94506100fe604088016100a4565b935061010c606088016100a4565b925061011a608088016100a4565b915061012860a088016100a4565b90509295509295509295565b610d9480620001446000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b33e40b511610097578063edca14d311610066578063edca14d314610215578063f080da1a1461021d578063f64480d01461023d578063ff5fcbc31461025057600080fd5b8063b33e40b5146101c2578063d4dc542c146101d5578063da073dc7146101f9578063dd4670641461020257600080fd5b80637f70fad9116100d35780637f70fad91461017f5780638e15f473146101945780638fd40d321461019c578063a68b5198146101af57600080fd5b8063161188b61461010557806325ecc79f1461013557806356316b5d14610163578063610936b91461016c575b600080fd5b600254610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101556101433660046109ce565b60006020819052908152604090205481565b60405190815260200161012c565b61015560085481565b600754610118906001600160a01b031681565b61019261018d3660046109ff565b610263565b005b6101556103f8565b600654610118906001600160a01b031681565b600554610118906001600160a01b031681565b6101926101d0366004610ac4565b610496565b6007546101e990600160a01b900460ff1681565b604051901515815260200161012c565b61015560095481565b610192610210366004610ac4565b6104b2565b6101926108bd565b61023061022b3660046109ce565b6108f9565b60405161012c9190610add565b600454610118906001600160a01b031681565b600354610118906001600160a01b031681565b6007546001600160a01b0316331461027a57600080fd5b600754600160a01b900460ff16151560011461029557600080fd5b60005b81518110156103f45760008282815181106102b5576102b5610b32565b60209081029190910101516003546040516370a0823160e01b81526001600160a01b038084166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103349190610b48565b600354604051632770a7eb60e21b81526001600160a01b03858116600483015260248201849052929350911690639dc29fac90604401600060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b50505050816001600160a01b03167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7826040516103d791815260200190565b60405180910390a2505080806103ec90610b77565b915050610298565b5050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561044e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104729190610baa565b509193506402540be40092506000915061048e90508383610993565b949350505050565b6006546001600160a01b031633146104ad57600080fd5b600955565b60048054604051634d8c928d60e11b815233928101929092526001600160a01b031690639b19251a90602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610bfa565b151560011461052d57600080fd5b600754600160a01b900460ff161561059a5760405162461bcd60e51b815260206004820152602560248201527f4c6f636b65723a20596f752063616e6e6f74206c6f636b20617420746865206d6044820152641bdb595b9d60da1b60648201526084015b60405180910390fd5b60006105a46103f8565b33600090815260208190526040812054919250670de0b6b3a76400006105d4846105ce85886109a6565b90610993565b6105de9190610c1c565b6004805460405163389d78f160e01b815233928101929092529192506000916001600160a01b03169063389d78f190602401602060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106519190610b48565b9050806000036106c9576004805460408051631e16a46960e11b815290516001600160a01b0390921692633c2d48d29282820192602092908290030181865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c69190610b48565b90505b80821061073e5760405162461bcd60e51b815260206004820152603a60248201527f4c6f636b65723a20796f752063616e6e6f7420616c6c6f63617465206d6f726560448201527f207468616e206d617820616c6c6f636174696f6e2076616c75650000000000006064820152608401610591565b6002546006546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018890529116906323b872dd906064016020604051808303816000875af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610bfa565b506000670de0b6b3a76400006107de6009548561099390919063ffffffff16565b6107e89190610c1c565b6003546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b5050505061086086856109a690919063ffffffff16565b336000818152602081815260408083209490945560019052829020915190917f91041d6c7a6291cc5133c2d75e882eab111ebfd14edb82460a95c2835e017e74916108ad91908a90610c78565b60405180910390a2505050505050565b6006546001600160a01b031633146108d457600080fd5b6007805460ff60a01b198116600160a01b9182900460ff161590910217905543600855565b6001602052600090815260409020805461091290610c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461093e90610c3e565b801561098b5780601f106109605761010080835404028352916020019161098b565b820191906000526020600020905b81548152906001019060200180831161096e57829003601f168201915b505050505081565b600061099f8284610d27565b9392505050565b600061099f8284610d46565b80356001600160a01b03811681146109c957600080fd5b919050565b6000602082840312156109e057600080fd5b61099f826109b2565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610a1257600080fd5b823567ffffffffffffffff80821115610a2a57600080fd5b818501915085601f830112610a3e57600080fd5b813581811115610a5057610a506109e9565b8060051b604051601f19603f83011681018181108582111715610a7557610a756109e9565b604052918252848201925083810185019188831115610a9357600080fd5b938501935b82851015610ab857610aa9856109b2565b84529385019392850192610a98565b98975050505050505050565b600060208284031215610ad657600080fd5b5035919050565b600060208083528351808285015260005b81811015610b0a57858101830151858201604001528201610aee565b81811115610b1c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b5a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b8957610b89610b61565b5060010190565b805169ffffffffffffffffffff811681146109c957600080fd5b600080600080600060a08688031215610bc257600080fd5b610bcb86610b90565b9450602086015193506040860151925060608601519150610bee60808701610b90565b90509295509295909350565b600060208284031215610c0c57600080fd5b8151801515811461099f57600080fd5b600082610c3957634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680610c5257607f821691505b602082108103610c7257634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c915080831680610c9857607f831692505b60208084108203610cb757634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015610cd65760018114610ce757610d12565b60ff19871682528282019750610d12565b60008c81526020902060005b87811015610d0c57815484820152908601908401610cf3565b83019850505b50509690960196909652509095945050505050565b6000816000190483118215151615610d4157610d41610b61565b500290565b60008219821115610d5957610d59610b61565b50019056fea2646970667358221220992e96f11d5473032ecc13eee832e48016a4fa7070fcb1c093044d6c895a352c64736f6c634300080e0033",
  "bytecodeSha1": "7f11fe3ec54dae7014dc16989b4dca91cf67c405",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Locker",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Locker.burnPlpd": {
          "16": [
            3046,
            3062,
            true
          ]
        },
        "Locker.lock": {
          "17": [
            1790,
            1807,
            true
          ],
          "18": [
            2141,
            2163,
            false
          ],
          "19": [
            2283,
            2319,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "SafeMath.add": {
          "15": [
            2832,
            2844
          ]
        },
        "SafeMath.mul": {
          "14": [
            3542,
            3554
          ]
        }
      },
      "5": {},
      "6": {
        "Locker.activateBurning": {
          "12": [
            2893,
            2913
          ],
          "13": [
            2923,
            2954
          ]
        },
        "Locker.burnPlpd": {
          "0": [
            3038,
            3063
          ],
          "1": [
            3271,
            3311
          ],
          "2": [
            3326,
            3359
          ],
          "3": [
            3125,
            3128
          ]
        },
        "Locker.lock": {
          "5": [
            1782,
            1849
          ],
          "6": [
            2179,
            2241
          ],
          "7": [
            2262,
            2394
          ],
          "8": [
            2405,
            2466
          ],
          "9": [
            2547,
            2589
          ],
          "10": [
            2600,
            2654
          ],
          "11": [
            2665,
            2733
          ]
        },
        "Locker.setPlpdPrice": {
          "4": [
            2809,
            2827
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.2.0/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20Metadata",
    "PolkapadERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/SafeMath",
    "Whitelist"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063b33e40b511610097578063edca14d311610066578063edca14d314610215578063f080da1a1461021d578063f64480d01461023d578063ff5fcbc31461025057600080fd5b8063b33e40b5146101c2578063d4dc542c146101d5578063da073dc7146101f9578063dd4670641461020257600080fd5b80637f70fad9116100d35780637f70fad91461017f5780638e15f473146101945780638fd40d321461019c578063a68b5198146101af57600080fd5b8063161188b61461010557806325ecc79f1461013557806356316b5d14610163578063610936b91461016c575b600080fd5b600254610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101556101433660046109ce565b60006020819052908152604090205481565b60405190815260200161012c565b61015560085481565b600754610118906001600160a01b031681565b61019261018d3660046109ff565b610263565b005b6101556103f8565b600654610118906001600160a01b031681565b600554610118906001600160a01b031681565b6101926101d0366004610ac4565b610496565b6007546101e990600160a01b900460ff1681565b604051901515815260200161012c565b61015560095481565b610192610210366004610ac4565b6104b2565b6101926108bd565b61023061022b3660046109ce565b6108f9565b60405161012c9190610add565b600454610118906001600160a01b031681565b600354610118906001600160a01b031681565b6007546001600160a01b0316331461027a57600080fd5b600754600160a01b900460ff16151560011461029557600080fd5b60005b81518110156103f45760008282815181106102b5576102b5610b32565b60209081029190910101516003546040516370a0823160e01b81526001600160a01b038084166004830152929350600092909116906370a0823190602401602060405180830381865afa158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103349190610b48565b600354604051632770a7eb60e21b81526001600160a01b03858116600483015260248201849052929350911690639dc29fac90604401600060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b50505050816001600160a01b03167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7826040516103d791815260200190565b60405180910390a2505080806103ec90610b77565b915050610298565b5050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561044e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104729190610baa565b509193506402540be40092506000915061048e90508383610993565b949350505050565b6006546001600160a01b031633146104ad57600080fd5b600955565b60048054604051634d8c928d60e11b815233928101929092526001600160a01b031690639b19251a90602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610bfa565b151560011461052d57600080fd5b600754600160a01b900460ff161561059a5760405162461bcd60e51b815260206004820152602560248201527f4c6f636b65723a20596f752063616e6e6f74206c6f636b20617420746865206d6044820152641bdb595b9d60da1b60648201526084015b60405180910390fd5b60006105a46103f8565b33600090815260208190526040812054919250670de0b6b3a76400006105d4846105ce85886109a6565b90610993565b6105de9190610c1c565b6004805460405163389d78f160e01b815233928101929092529192506000916001600160a01b03169063389d78f190602401602060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106519190610b48565b9050806000036106c9576004805460408051631e16a46960e11b815290516001600160a01b0390921692633c2d48d29282820192602092908290030181865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c69190610b48565b90505b80821061073e5760405162461bcd60e51b815260206004820152603a60248201527f4c6f636b65723a20796f752063616e6e6f7420616c6c6f63617465206d6f726560448201527f207468616e206d617820616c6c6f636174696f6e2076616c75650000000000006064820152608401610591565b6002546006546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018890529116906323b872dd906064016020604051808303816000875af1158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610bfa565b506000670de0b6b3a76400006107de6009548561099390919063ffffffff16565b6107e89190610c1c565b6003546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b5050505061086086856109a690919063ffffffff16565b336000818152602081815260408083209490945560019052829020915190917f91041d6c7a6291cc5133c2d75e882eab111ebfd14edb82460a95c2835e017e74916108ad91908a90610c78565b60405180910390a2505050505050565b6006546001600160a01b031633146108d457600080fd5b6007805460ff60a01b198116600160a01b9182900460ff161590910217905543600855565b6001602052600090815260409020805461091290610c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461093e90610c3e565b801561098b5780601f106109605761010080835404028352916020019161098b565b820191906000526020600020905b81548152906001019060200180831161096e57829003601f168201915b505050505081565b600061099f8284610d27565b9392505050565b600061099f8284610d46565b80356001600160a01b03811681146109c957600080fd5b919050565b6000602082840312156109e057600080fd5b61099f826109b2565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610a1257600080fd5b823567ffffffffffffffff80821115610a2a57600080fd5b818501915085601f830112610a3e57600080fd5b813581811115610a5057610a506109e9565b8060051b604051601f19603f83011681018181108582111715610a7557610a756109e9565b604052918252848201925083810185019188831115610a9357600080fd5b938501935b82851015610ab857610aa9856109b2565b84529385019392850192610a98565b98975050505050505050565b600060208284031215610ad657600080fd5b5035919050565b600060208083528351808285015260005b81811015610b0a57858101830151858201604001528201610aee565b81811115610b1c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b5a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b8957610b89610b61565b5060010190565b805169ffffffffffffffffffff811681146109c957600080fd5b600080600080600060a08688031215610bc257600080fd5b610bcb86610b90565b9450602086015193506040860151925060608601519150610bee60808701610b90565b90509295509295909350565b600060208284031215610c0c57600080fd5b8151801515811461099f57600080fd5b600082610c3957634e487b7160e01b600052601260045260246000fd5b500490565b600181811c90821680610c5257607f821691505b602082108103610c7257634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c915080831680610c9857607f831692505b60208084108203610cb757634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015610cd65760018114610ce757610d12565b60ff19871682528282019750610d12565b60008c81526020902060005b87811015610d0c57815484820152908601908401610cf3565b83019850505b50509690960196909652509095945050505050565b6000816000190483118215151615610d4157610d41610b61565b500290565b60008219821115610d5957610d59610b61565b50019056fea2646970667358221220992e96f11d5473032ecc13eee832e48016a4fa7070fcb1c093044d6c895a352c64736f6c634300080e0033",
  "deployedSourceMap": "306:3503:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:35;;;;;-1:-1:-1;;;;;470:35:6;;;;;;-1:-1:-1;;;;;191:32:9;;;173:51;;161:2;146:18;470:35:6;;;;;;;;361:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;750:25:9;;;738:2;723:18;361:42:6;604:177:9;735:28:6;;;;;;680:22;;;;;-1:-1:-1;;;;;680:22:6;;;2967:409;;;;;;:::i;:::-;;:::i;:::-;;3382:425;;;:::i;650:24::-;;;;;-1:-1:-1;;;;;650:24:6;;;601:42;;;;;-1:-1:-1;;;;;601:42:6;;;2746:88;;;;;;:::i;:::-;;:::i;709:20::-;;;;;-1:-1:-1;;;709:20:6;;;;;;;;;2840:14:9;;2833:22;2815:41;;2803:2;2788:18;709:20:6;2675:187:9;770:25:6;;;;;;1718:1022;;;;;;:::i;:::-;;:::i;2840:121::-;;;:::i;409:54::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;553:41::-;;;;;-1:-1:-1;;;;;553:41:6;;;511:36;;;;;-1:-1:-1;;;;;511:36:6;;;2967:409;1686:7;;-1:-1:-1;;;;;1686:7:6;1672:10;:21;1664:30;;;;;;3046:8:::1;::::0;-1:-1:-1;;;3046:8:6;::::1;;;:16;;3058:4;3046:16;3038:25;;;::::0;::::1;;3087:9;3082:288;3106:10;:17;3102:1;:21;3082:288;;;3144:16;3163:10;3174:1;3163:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;3224::::1;::::0;:33:::1;::::0;-1:-1:-1;;;3224:33:6;;-1:-1:-1;;;;;191:32:9;;;3224:33:6::1;::::0;::::1;173:51:9::0;3163:13:6;;-1:-1:-1;3203:18:6::1;::::0;3224:13;;::::1;::::0;:23:::1;::::0;146:18:9;;3224:33:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3271:13;::::0;:40:::1;::::0;-1:-1:-1;;;3271:40:6;;-1:-1:-1;;;;;4593:32:9;;;3271:40:6::1;::::0;::::1;4575:51:9::0;4642:18;;;4635:34;;;3203:54:6;;-1:-1:-1;3271:13:6;::::1;::::0;:18:::1;::::0;4548::9;;3271:40:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3338:8;-1:-1:-1::0;;;;;3331:28:6::1;;3348:10;3331:28;;;;750:25:9::0;;738:2;723:18;;604:177;3331:28:6::1;;;;;;;;3130:240;;3125:3;;;;;:::i;:::-;;;;3082:288;;;;2967:409:::0;:::o;3382:425::-;3429:7;3494:9;3620:13;;;;;;;;;-1:-1:-1;;;;;3620:13:6;-1:-1:-1;;;;;3620:29:6;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3448:203:6;;-1:-1:-1;3689:10:6;;-1:-1:-1;3662:24:6;;-1:-1:-1;3733:36:6;;-1:-1:-1;3448:203:6;3689:10;3733:18;:36::i;:::-;3709:60;3382:425;-1:-1:-1;;;;3382:425:6:o;2746:88::-;1604:9;;-1:-1:-1;;;;;1604:9:6;1590:10;:23;1582:32;;;;;;2809:10:::1;:18:::0;2746:88::o;1718:1022::-;1481:18;;;:40;;-1:-1:-1;;;1481:40:6;;1510:10;1481:40;;;173:51:9;;;;-1:-1:-1;;;;;1481:18:6;;:28;;146:18:9;;1481:40:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1525:4;1481:48;1473:57;;;;;;1790:8:::1;::::0;-1:-1:-1;;;1790:8:6;::::1;;;:17;1782:67;;;::::0;-1:-1:-1;;;1782:67:6;;6098:2:9;1782:67:6::1;::::0;::::1;6080:21:9::0;6137:2;6117:18;;;6110:30;6176:34;6156:18;;;6149:62;-1:-1:-1;;;6227:18:9;;;6220:35;6272:19;;1782:67:6::1;;;;;;;;;1860:16;1879;:14;:16::i;:::-;1940:10;1906:24;1933:18:::0;;;::::1;::::0;;;;;;;1860:35;;-1:-1:-1;2038:4:6::1;1988:47;1860:35:::0;1988:33:::1;1933:18:::0;2009:11;1988:20:::1;:33::i;:::-;:37:::0;::::1;:47::i;:::-;:54;;;;:::i;:::-;2081:18;::::0;;:46:::1;::::0;-1:-1:-1;;;2081:46:6;;2116:10:::1;2081:46:::0;;::::1;173:51:9::0;;;;1961:81:6;;-1:-1:-1;2053:25:6::1;::::0;-1:-1:-1;;;;;2081:18:6::1;::::0;:34:::1;::::0;146:18:9;;2081:46:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2053:74;;2141:17;2162:1;2141:22:::0;2137:115:::1;;2199:18;::::0;;:42:::1;::::0;;-1:-1:-1;;;2199:42:6;;;;-1:-1:-1;;;;;2199:18:6;;::::1;::::0;:40:::1;::::0;:42;;::::1;::::0;::::1;::::0;;;;;;;:18;:42:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2179:62;;2137:115;2302:17;2283:16;:36;2262:132;;;::::0;-1:-1:-1;;;2262:132:6;;6726:2:9;2262:132:6::1;::::0;::::1;6708:21:9::0;6765:2;6745:18;;;6738:30;6804:34;6784:18;;;6777:62;6875:28;6855:18;;;6848:56;6921:19;;2262:132:6::1;6524:422:9::0;2262:132:6::1;2405:12;::::0;2443:9:::1;::::0;2405:61:::1;::::0;-1:-1:-1;;;2405:61:6;;2431:10:::1;2405:61;::::0;::::1;7191:34:9::0;-1:-1:-1;;;;;2443:9:6;;::::1;7241:18:9::0;;;7234:43;7293:18;;;7286:34;;;2405:12:6;::::1;::::0;:25:::1;::::0;7126:18:9;;2405:61:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2477:18;2533:4;2498:32;2519:10;;2498:16;:20;;:32;;;;:::i;:::-;:39;;;;:::i;:::-;2547:13;::::0;:42:::1;::::0;-1:-1:-1;;;2547:42:6;;2566:10:::1;2547:42;::::0;::::1;4575:51:9::0;4642:18;;;4635:34;;;2477:60:6;;-1:-1:-1;;;;;;2547:13:6::1;::::0;:18:::1;::::0;4548::9;;2547:42:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2621:33;2642:11;2621:16;:20;;:33;;;;:::i;:::-;2607:10;2600:6;:18:::0;;;::::1;::::0;;;;;;;:54;;;;2689:18:::1;:30:::0;;;;;2670:63;;2607:10;;2670:63:::1;::::0;::::1;::::0;2689:30;2721:11;;2670:63:::1;:::i;:::-;;;;;;;;1772:968;;;;;1718:1022:::0;:::o;2840:121::-;1604:9;;-1:-1:-1;;;;;1604:9:6;1590:10;:23;1582:32;;;;;;2905:8:::1;::::0;;-1:-1:-1;;;;2893:20:6;::::1;-1:-1:-1::0;;;2905:8:6;;;::::1;;;2904:9;2893:20:::0;;::::1;;::::0;;2942:12:::1;2923:16;:31:::0;2840:121::o;409:54::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3465:96:4:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:4:o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;235:173:9:-;303:20;;-1:-1:-1;;;;;352:31:9;;342:42;;332:70;;398:1;395;388:12;332:70;235:173;;;:::o;413:186::-;472:6;525:2;513:9;504:7;500:23;496:32;493:52;;;541:1;538;531:12;493:52;564:29;583:9;564:29;:::i;994:127::-;1055:10;1050:3;1046:20;1043:1;1036:31;1086:4;1083:1;1076:15;1110:4;1107:1;1100:15;1126:1121;1210:6;1241:2;1284;1272:9;1263:7;1259:23;1255:32;1252:52;;;1300:1;1297;1290:12;1252:52;1340:9;1327:23;1369:18;1410:2;1402:6;1399:14;1396:34;;;1426:1;1423;1416:12;1396:34;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:55;;1531:1;1528;1521:12;1480:55;1567:2;1554:16;1589:2;1585;1582:10;1579:36;;;1595:18;;:::i;:::-;1641:2;1638:1;1634:10;1673:2;1667:9;1736:2;1732:7;1727:2;1723;1719:11;1715:25;1707:6;1703:38;1791:6;1779:10;1776:22;1771:2;1759:10;1756:18;1753:46;1750:72;;;1802:18;;:::i;:::-;1838:2;1831:22;1888:18;;;1922:15;;;;-1:-1:-1;1964:11:9;;;1960:20;;;1992:19;;;1989:39;;;2024:1;2021;2014:12;1989:39;2048:11;;;;2068:148;2084:6;2079:3;2076:15;2068:148;;;2150:23;2169:3;2150:23;:::i;:::-;2138:36;;2101:12;;;;2194;;;;2068:148;;;2235:6;1126:1121;-1:-1:-1;;;;;;;;1126:1121:9:o;2490:180::-;2549:6;2602:2;2590:9;2581:7;2577:23;2573:32;2570:52;;;2618:1;2615;2608:12;2570:52;-1:-1:-1;2641:23:9;;2490:180;-1:-1:-1;2490:180:9:o;3022:597::-;3134:4;3163:2;3192;3181:9;3174:21;3224:6;3218:13;3267:6;3262:2;3251:9;3247:18;3240:34;3292:1;3302:140;3316:6;3313:1;3310:13;3302:140;;;3411:14;;;3407:23;;3401:30;3377:17;;;3396:2;3373:26;3366:66;3331:10;;3302:140;;;3460:6;3457:1;3454:13;3451:91;;;3530:1;3525:2;3516:6;3505:9;3501:22;3497:31;3490:42;3451:91;-1:-1:-1;3603:2:9;3582:15;-1:-1:-1;;3578:29:9;3563:45;;;;3610:2;3559:54;;3022:597;-1:-1:-1;;;3022:597:9:o;4080:127::-;4141:10;4136:3;4132:20;4129:1;4122:31;4172:4;4169:1;4162:15;4196:4;4193:1;4186:15;4212:184;4282:6;4335:2;4323:9;4314:7;4310:23;4306:32;4303:52;;;4351:1;4348;4341:12;4303:52;-1:-1:-1;4374:16:9;;4212:184;-1:-1:-1;4212:184:9:o;4680:127::-;4741:10;4736:3;4732:20;4729:1;4722:31;4772:4;4769:1;4762:15;4796:4;4793:1;4786:15;4812:135;4851:3;4872:17;;;4869:43;;4892:18;;:::i;:::-;-1:-1:-1;4939:1:9;4928:13;;4812:135::o;4952:179::-;5030:13;;5083:22;5072:34;;5062:45;;5052:73;;5121:1;5118;5111:12;5136:473;5239:6;5247;5255;5263;5271;5324:3;5312:9;5303:7;5299:23;5295:33;5292:53;;;5341:1;5338;5331:12;5292:53;5364:39;5393:9;5364:39;:::i;:::-;5354:49;;5443:2;5432:9;5428:18;5422:25;5412:35;;5487:2;5476:9;5472:18;5466:25;5456:35;;5531:2;5520:9;5516:18;5510:25;5500:35;;5554:49;5598:3;5587:9;5583:19;5554:49;:::i;:::-;5544:59;;5136:473;;;;;;;;:::o;5614:277::-;5681:6;5734:2;5722:9;5713:7;5709:23;5705:32;5702:52;;;5750:1;5747;5740:12;5702:52;5782:9;5776:16;5835:5;5828:13;5821:21;5814:5;5811:32;5801:60;;5857:1;5854;5847:12;6302:217;6342:1;6368;6358:132;;6412:10;6407:3;6403:20;6400:1;6393:31;6447:4;6444:1;6437:15;6475:4;6472:1;6465:15;6358:132;-1:-1:-1;6504:9:9;;6302:217::o;7331:380::-;7410:1;7406:12;;;;7453;;;7474:61;;7528:4;7520:6;7516:17;7506:27;;7474:61;7581:2;7573:6;7570:14;7550:18;7547:38;7544:161;;7627:10;7622:3;7618:20;7615:1;7608:31;7662:4;7659:1;7652:15;7690:4;7687:1;7680:15;7544:161;;7331:380;;;:::o;7842:1257::-;8016:2;8005:9;7998:21;7979:4;8039:1;8072:6;8066:13;8102:3;8124:1;8152:9;8148:2;8144:18;8134:28;;8212:2;8201:9;8197:18;8234;8224:61;;8278:4;8270:6;8266:17;8256:27;;8224:61;8304:2;8352;8344:6;8341:14;8321:18;8318:38;8315:165;;-1:-1:-1;;;8379:33:9;;8435:4;8432:1;8425:15;8465:4;8386:3;8453:17;8315:165;8551:2;8536:18;;2954:19;;;2997:14;;;8579:18;8606:100;;;;8720:1;8715:315;;;;8572:458;;8606:100;-1:-1:-1;;8639:24:9;;8627:37;;8684:12;;;;-1:-1:-1;8606:100:9;;8715:315;7789:1;7782:14;;;7826:4;7813:18;;8810:1;8824:165;8838:6;8835:1;8832:13;8824:165;;;8916:14;;8903:11;;;8896:35;8959:16;;;;8853:10;;8824:165;;;9009:11;;;-1:-1:-1;;8572:458:9;-1:-1:-1;;9066:18:9;;;;9059:34;;;;-1:-1:-1;9047:3:9;;7842:1257;-1:-1:-1;;;;;7842:1257:9:o;9104:168::-;9144:7;9210:1;9206;9202:6;9198:14;9195:1;9192:21;9187:1;9180:9;9173:17;9169:45;9166:71;;;9217:18;;:::i;:::-;-1:-1:-1;9257:9:9;;9104:168::o;9277:128::-;9317:3;9348:1;9344:6;9341:1;9338:13;9335:39;;;9354:18;;:::i;:::-;-1:-1:-1;9390:9:9;;9277:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    306,
    3809
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB33E40B5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEDCA14D3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEDCA14D3 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF080DA1A EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xF64480D0 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xFF5FCBC3 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB33E40B5 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xD4DC542C EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xDA073DC7 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xDD467064 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F70FAD9 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7F70FAD9 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x8FD40D32 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xA68B5198 EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x161188B6 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x25ECC79F EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x56316B5D EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x610936B9 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x155 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E9 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x155 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B5 JUMPI PUSH2 0x2B5 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x310 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP DUP1 DUP1 PUSH2 0x3EC SWAP1 PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x298 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0xBAA JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH5 0x2540BE400 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x48E SWAP1 POP DUP4 DUP4 PUSH2 0x993 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4D8C928D PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9B19251A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xBFA JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B65723A20596F752063616E6E6F74206C6F636B20617420746865206D PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1BDB595B9D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A4 PUSH2 0x3F8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x5D4 DUP5 PUSH2 0x5CE DUP6 DUP9 PUSH2 0x9A6 JUMP JUMPDEST SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x389D78F1 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x389D78F1 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x6C9 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1E16A469 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x3C2D48D2 SWAP3 DUP3 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 LT PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B65723A20796F752063616E6E6F7420616C6C6F63617465206D6F7265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468616E206D617820616C6C6F636174696F6E2076616C7565000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x591 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x799 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0xBFA JUMP JUMPDEST POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7DE PUSH1 0x9 SLOAD DUP6 PUSH2 0x993 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x860 DUP7 DUP6 PUSH2 0x9A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x1 SWAP1 MSTORE DUP3 SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0x91041D6C7A6291CC5133C2D75E882EAB111EBFD14EDB82460A95C2835E017E74 SWAP2 PUSH2 0x8AD SWAP2 SWAP1 DUP11 SWAP1 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE NUMBER PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x912 SWAP1 PUSH2 0xC3E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93E SWAP1 PUSH2 0xC3E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x960 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x96E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99F DUP3 DUP5 PUSH2 0xD27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99F DUP3 DUP5 PUSH2 0xD46 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99F DUP3 PUSH2 0x9B2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA50 PUSH2 0x9E9 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA75 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAA9 DUP6 PUSH2 0x9B2 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xA98 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB0A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAEE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB1C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB89 JUMPI PUSH2 0xB89 PUSH2 0xB61 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBCB DUP7 PUSH2 0xB90 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xBEE PUSH1 0x80 DUP8 ADD PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x99F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC39 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC52 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC72 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xC98 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0xCB7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP9 ADD DUP3 DUP1 ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xCE7 JUMPI PUSH2 0xD12 JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP3 DUP3 ADD SWAP8 POP PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xD0C JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0xCF3 JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP SWAP7 SWAP1 SWAP7 ADD SWAP7 SWAP1 SWAP7 MSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xD41 JUMPI PUSH2 0xD41 PUSH2 0xB61 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD59 PUSH2 0xB61 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x2E SWAP7 CALL SAR SLOAD PUSH20 0x32ECC13EEE832E48016A4FA7070FCB1C093044D PUSH13 0x895A352C64736F6C634300080E STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB33E40B5"
    },
    "38": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEDCA14D3"
    },
    "49": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xEDCA14D3"
    },
    "60": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x215"
    },
    "64": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF080DA1A"
    },
    "71": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21D"
    },
    "75": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF64480D0"
    },
    "82": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23D"
    },
    "86": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFF5FCBC3"
    },
    "93": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x250"
    },
    "97": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB33E40B5"
    },
    "109": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C2"
    },
    "113": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD4DC542C"
    },
    "120": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D5"
    },
    "124": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDA073DC7"
    },
    "131": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F9"
    },
    "135": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD467064"
    },
    "142": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x202"
    },
    "146": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "150": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "151": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7F70FAD9"
    },
    "158": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "GT",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x7F70FAD9"
    },
    "169": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "173": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8E15F473"
    },
    "180": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x194"
    },
    "184": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8FD40D32"
    },
    "191": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19C"
    },
    "195": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA68B5198"
    },
    "202": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AF"
    },
    "206": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "210": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "211": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "213": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x161188B6"
    },
    "218": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "219": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "224": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x25ECC79F"
    },
    "229": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "230": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x135"
    },
    "233": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "235": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x56316B5D"
    },
    "240": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "241": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163"
    },
    "244": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "246": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x610936B9"
    },
    "251": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "EQ",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16C"
    },
    "255": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "256": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "257": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        306,
        3809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "261": {
      "offset": [
        470,
        505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "262": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "264": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "268": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "275": {
      "op": "SHL"
    },
    "276": {
      "op": "SUB"
    },
    "277": {
      "offset": [
        470,
        505
      ],
      "op": "AND",
      "path": "6"
    },
    "278": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "DUP2",
      "path": "6"
    },
    "279": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "JUMP",
      "path": "6"
    },
    "280": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "281": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "283": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "SHL"
    },
    "291": {
      "op": "SUB"
    },
    "292": {
      "op": "SWAP1"
    },
    "293": {
      "op": "SWAP2"
    },
    "294": {
      "op": "AND"
    },
    "295": {
      "op": "DUP2"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "offset": [
        470,
        505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "301": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "303": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "304": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "DUP1",
      "path": "6"
    },
    "305": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "306": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "SUB",
      "path": "6"
    },
    "307": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "308": {
      "fn": null,
      "offset": [
        470,
        505
      ],
      "op": "RETURN",
      "path": "6"
    },
    "309": {
      "offset": [
        361,
        403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "310": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "313": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x143"
    },
    "316": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "317": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "319": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CE"
    },
    "322": {
      "fn": null,
      "jump": "i",
      "offset": [
        361,
        403
      ],
      "op": "JUMP",
      "path": "6"
    },
    "323": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "324": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "326": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "328": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "DUP2",
      "path": "6"
    },
    "329": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "330": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "331": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "332": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "DUP2",
      "path": "6"
    },
    "333": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "336": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "337": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "338": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "339": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "DUP2",
      "path": "6"
    },
    "340": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "JUMP",
      "path": "6"
    },
    "341": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "342": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "344": {
      "fn": null,
      "offset": [
        361,
        403
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "DUP2"
    },
    "347": {
      "op": "MSTORE"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "offset": [
        361,
        403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "354": {
      "op": "JUMP"
    },
    "355": {
      "offset": [
        735,
        763
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "356": {
      "fn": null,
      "offset": [
        735,
        763
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "359": {
      "fn": null,
      "offset": [
        735,
        763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "361": {
      "fn": null,
      "offset": [
        735,
        763
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "362": {
      "fn": null,
      "offset": [
        735,
        763
      ],
      "op": "DUP2",
      "path": "6"
    },
    "363": {
      "fn": null,
      "offset": [
        735,
        763
      ],
      "op": "JUMP",
      "path": "6"
    },
    "364": {
      "offset": [
        680,
        702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "365": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "367": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "368": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "371": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "offset": [
        680,
        702
      ],
      "op": "AND",
      "path": "6"
    },
    "381": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "DUP2",
      "path": "6"
    },
    "382": {
      "fn": null,
      "offset": [
        680,
        702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "383": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "387": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "390": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "391": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "393": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FF"
    },
    "396": {
      "fn": "Locker.burnPlpd",
      "jump": "i",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "397": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x263"
    },
    "401": {
      "fn": "Locker.burnPlpd",
      "jump": "i",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "402": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "STOP",
      "path": "6"
    },
    "404": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3382,
        3807
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "405": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3382,
        3807
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "408": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3382,
        3807
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F8"
    },
    "411": {
      "fn": "Locker.getLatestPrice",
      "jump": "i",
      "offset": [
        3382,
        3807
      ],
      "op": "JUMP",
      "path": "6"
    },
    "412": {
      "offset": [
        650,
        674
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "413": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "415": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "416": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "419": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "426": {
      "op": "SHL"
    },
    "427": {
      "op": "SUB"
    },
    "428": {
      "offset": [
        650,
        674
      ],
      "op": "AND",
      "path": "6"
    },
    "429": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "DUP2",
      "path": "6"
    },
    "430": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        650,
        674
      ],
      "op": "JUMP",
      "path": "6"
    },
    "431": {
      "offset": [
        601,
        643
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "432": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "434": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "435": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "438": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "offset": [
        601,
        643
      ],
      "op": "AND",
      "path": "6"
    },
    "448": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "449": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        601,
        643
      ],
      "op": "JUMP",
      "path": "6"
    },
    "450": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "451": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "454": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D0"
    },
    "457": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "458": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "460": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC4"
    },
    "463": {
      "fn": "Locker.setPlpdPrice",
      "jump": "i",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "464": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "465": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x496"
    },
    "468": {
      "fn": "Locker.setPlpdPrice",
      "jump": "i",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "469": {
      "offset": [
        709,
        729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "470": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "472": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "473": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E9"
    },
    "476": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "483": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "DIV",
      "path": "6"
    },
    "484": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "486": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "AND",
      "path": "6"
    },
    "487": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "488": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "JUMP",
      "path": "6"
    },
    "489": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "490": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "492": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        709,
        729
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "493": {
      "op": "SWAP1"
    },
    "494": {
      "op": "ISZERO"
    },
    "495": {
      "op": "ISZERO"
    },
    "496": {
      "op": "DUP2"
    },
    "497": {
      "op": "MSTORE"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "op": "ADD"
    },
    "501": {
      "offset": [
        709,
        729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "504": {
      "op": "JUMP"
    },
    "505": {
      "offset": [
        770,
        795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "506": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        770,
        795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "509": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        770,
        795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "511": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        770,
        795
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "512": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        770,
        795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "513": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        770,
        795
      ],
      "op": "JUMP",
      "path": "6"
    },
    "514": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "515": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "518": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x210"
    },
    "521": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "522": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "524": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC4"
    },
    "527": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "528": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "529": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B2"
    },
    "532": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "533": {
      "fn": "Locker.activateBurning",
      "offset": [
        2840,
        2961
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "534": {
      "fn": "Locker.activateBurning",
      "offset": [
        2840,
        2961
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "537": {
      "fn": "Locker.activateBurning",
      "offset": [
        2840,
        2961
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8BD"
    },
    "540": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        2840,
        2961
      ],
      "op": "JUMP",
      "path": "6"
    },
    "541": {
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "542": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x230"
    },
    "545": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22B"
    },
    "548": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "549": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "551": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CE"
    },
    "554": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "555": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "556": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F9"
    },
    "559": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "560": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "561": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "563": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "564": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "567": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "568": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "569": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADD"
    },
    "572": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "573": {
      "offset": [
        553,
        594
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "574": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "576": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "577": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "580": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "offset": [
        553,
        594
      ],
      "op": "AND",
      "path": "6"
    },
    "590": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "DUP2",
      "path": "6"
    },
    "591": {
      "fn": "Locker.activateBurning",
      "offset": [
        553,
        594
      ],
      "op": "JUMP",
      "path": "6"
    },
    "592": {
      "offset": [
        511,
        547
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "593": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "595": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "596": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "599": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "606": {
      "op": "SHL"
    },
    "607": {
      "op": "SUB"
    },
    "608": {
      "offset": [
        511,
        547
      ],
      "op": "AND",
      "path": "6"
    },
    "609": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "DUP2",
      "path": "6"
    },
    "610": {
      "fn": "Locker.activateBurning",
      "offset": [
        511,
        547
      ],
      "op": "JUMP",
      "path": "6"
    },
    "611": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "612": {
      "offset": [
        1686,
        1693
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "614": {
      "fn": "Locker.burnPlpd",
      "offset": [
        1686,
        1693
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "offset": [
        1686,
        1693
      ],
      "op": "AND",
      "path": "6"
    },
    "624": {
      "offset": [
        1672,
        1682
      ],
      "op": "CALLER",
      "path": "6"
    },
    "625": {
      "offset": [
        1672,
        1693
      ],
      "op": "EQ",
      "path": "6"
    },
    "626": {
      "offset": [
        1664,
        1694
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27A"
    },
    "629": {
      "offset": [
        1664,
        1694
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "630": {
      "fn": "Locker.burnPlpd",
      "offset": [
        1664,
        1694
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "632": {
      "fn": "Locker.burnPlpd",
      "offset": [
        1664,
        1694
      ],
      "op": "DUP1",
      "path": "6"
    },
    "633": {
      "fn": "Locker.burnPlpd",
      "offset": [
        1664,
        1694
      ],
      "op": "REVERT",
      "path": "6"
    },
    "634": {
      "fn": "Locker.burnPlpd",
      "offset": [
        1664,
        1694
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "635": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x7"
    },
    "637": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "644": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "DIV",
      "path": "6"
    },
    "645": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "647": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3054
      ],
      "op": "AND",
      "path": "6"
    },
    "648": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3062
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "649": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3062
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "650": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3058,
        3062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "652": {
      "branch": 16,
      "fn": "Locker.burnPlpd",
      "offset": [
        3046,
        3062
      ],
      "op": "EQ",
      "path": "6"
    },
    "653": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295"
    },
    "656": {
      "branch": 16,
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "657": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "659": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "DUP1",
      "path": "6"
    },
    "660": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "REVERT",
      "path": "6"
    },
    "661": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3038,
        3063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "662": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3087,
        3096
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "664": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "665": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3106,
        3116
      ],
      "op": "DUP2",
      "path": "6"
    },
    "666": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3106,
        3123
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "667": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3102,
        3103
      ],
      "op": "DUP2",
      "path": "6"
    },
    "668": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3102,
        3123
      ],
      "op": "LT",
      "path": "6"
    },
    "669": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "670": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F4"
    },
    "673": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "674": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3144,
        3160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "676": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3173
      ],
      "op": "DUP3",
      "path": "6"
    },
    "677": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3174,
        3175
      ],
      "op": "DUP3",
      "path": "6"
    },
    "678": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "DUP2",
      "path": "6"
    },
    "679": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "680": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "DUP2",
      "path": "6"
    },
    "681": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "LT",
      "path": "6"
    },
    "682": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5"
    },
    "685": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "686": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5"
    },
    "689": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB32"
    },
    "692": {
      "fn": "Locker.burnPlpd",
      "jump": "i",
      "offset": [
        3163,
        3176
      ],
      "op": "JUMP",
      "path": "6"
    },
    "693": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "694": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "696": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "697": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "DUP2",
      "path": "6"
    },
    "698": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "MUL",
      "path": "6"
    },
    "699": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "700": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "701": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "702": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "ADD",
      "path": "6"
    },
    "703": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "ADD",
      "path": "6"
    },
    "704": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "705": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "707": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "708": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "710": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "711": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "720": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "op": "DUP1"
    },
    "730": {
      "op": "DUP5"
    },
    "731": {
      "op": "AND"
    },
    "732": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "734": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP4",
      "path": "6"
    },
    "735": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ADD",
      "path": "6"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "738": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3163,
        3176
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3203,
        3221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "742": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3203,
        3221
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "743": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "744": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "745": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "AND",
      "path": "6"
    },
    "746": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3237
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "747": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3247
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "752": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3247
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "755": {
      "op": "ADD"
    },
    "756": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "758": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "760": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "761": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "762": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP4",
      "path": "6"
    },
    "763": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "SUB",
      "path": "6"
    },
    "764": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "765": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP7",
      "path": "6"
    },
    "766": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "GAS",
      "path": "6"
    },
    "767": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "768": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "769": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "770": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "771": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x310"
    },
    "774": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "775": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "776": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "778": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "779": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "780": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "781": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "783": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "REVERT",
      "path": "6"
    },
    "784": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "785": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "POP",
      "path": "6"
    },
    "786": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "POP",
      "path": "6"
    },
    "787": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "POP",
      "path": "6"
    },
    "788": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "POP",
      "path": "6"
    },
    "789": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "791": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "792": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "793": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "795": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "NOT",
      "path": "6"
    },
    "796": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "798": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP3",
      "path": "6"
    },
    "799": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ADD",
      "path": "6"
    },
    "800": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "AND",
      "path": "6"
    },
    "801": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP3",
      "path": "6"
    },
    "802": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ADD",
      "path": "6"
    },
    "803": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "804": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "806": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "807": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "POP",
      "path": "6"
    },
    "808": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "DUP2",
      "path": "6"
    },
    "809": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "ADD",
      "path": "6"
    },
    "810": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "811": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x334"
    },
    "814": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "815": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "816": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB48"
    },
    "819": {
      "fn": "Locker.burnPlpd",
      "jump": "i",
      "offset": [
        3224,
        3257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "820": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3224,
        3257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "821": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3284
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x3"
    },
    "823": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3284
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "824": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "826": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "827": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "836": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "op": "SUB"
    },
    "845": {
      "op": "DUP6"
    },
    "846": {
      "op": "DUP2"
    },
    "847": {
      "op": "AND"
    },
    "848": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "850": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP4",
      "path": "6"
    },
    "851": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "ADD",
      "path": "6"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "855": {
      "op": "DUP3"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "DUP5"
    },
    "858": {
      "op": "SWAP1"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3203,
        3257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "861": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3203,
        3257
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3284
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "864": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3284
      ],
      "op": "AND",
      "path": "6"
    },
    "865": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3284
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "866": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3289
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9DC29FAC"
    },
    "871": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "877": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "879": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "880": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "881": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP4",
      "path": "6"
    },
    "882": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "SUB",
      "path": "6"
    },
    "883": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "884": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "886": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP8",
      "path": "6"
    },
    "887": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "888": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "889": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "890": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "891": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "892": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x384"
    },
    "895": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "896": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "898": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "899": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "REVERT",
      "path": "6"
    },
    "900": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "POP",
      "path": "6"
    },
    "902": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "GAS",
      "path": "6"
    },
    "903": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "CALL",
      "path": "6"
    },
    "904": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "905": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "906": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "907": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "910": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "911": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "912": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "914": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "915": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "916": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "917": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "919": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "REVERT",
      "path": "6"
    },
    "920": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "921": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "POP",
      "path": "6"
    },
    "922": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "POP",
      "path": "6"
    },
    "923": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "POP",
      "path": "6"
    },
    "924": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3271,
        3311
      ],
      "op": "POP",
      "path": "6"
    },
    "925": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3338,
        3346
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 2
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "AND",
      "path": "6"
    },
    "935": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
    },
    "968": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3348,
        3358
      ],
      "op": "DUP3",
      "path": "6"
    },
    "969": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "971": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "972": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D7"
    },
    "975": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "976": {
      "op": "DUP2"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "op": "SWAP1"
    },
    "982": {
      "op": "JUMP"
    },
    "983": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "984": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "986": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "987": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "DUP1",
      "path": "6"
    },
    "988": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "989": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "SUB",
      "path": "6"
    },
    "990": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "991": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3331,
        3359
      ],
      "op": "LOG2",
      "path": "6"
    },
    "992": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3130,
        3370
      ],
      "op": "POP",
      "path": "6"
    },
    "993": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3130,
        3370
      ],
      "op": "POP",
      "path": "6"
    },
    "994": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 3
    },
    "995": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "DUP1",
      "path": "6"
    },
    "996": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EC"
    },
    "999": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1000": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB77"
    },
    "1003": {
      "fn": "Locker.burnPlpd",
      "jump": "i",
      "offset": [
        3125,
        3128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1004": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1005": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1006": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "POP",
      "path": "6"
    },
    "1007": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3125,
        3128
      ],
      "op": "POP",
      "path": "6"
    },
    "1008": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x298"
    },
    "1011": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1012": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1013": {
      "fn": "Locker.burnPlpd",
      "offset": [
        3082,
        3370
      ],
      "op": "POP",
      "path": "6"
    },
    "1014": {
      "fn": "Locker.burnPlpd",
      "offset": [
        2967,
        3376
      ],
      "op": "POP",
      "path": "6"
    },
    "1015": {
      "fn": "Locker.burnPlpd",
      "jump": "o",
      "offset": [
        2967,
        3376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1016": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3382,
        3807
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1017": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3429,
        3436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1019": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3494,
        3503
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1020": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1022": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1024": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1025": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1026": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1027": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1030": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "EXP",
      "path": "6"
    },
    "1031": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1032": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "DIV",
      "path": "6"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1039": {
      "op": "SHL"
    },
    "1040": {
      "op": "SUB"
    },
    "1041": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3633
      ],
      "op": "AND",
      "path": "6"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3649
      ],
      "op": "AND",
      "path": "6"
    },
    "1051": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3649
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFEAF968C"
    },
    "1056": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1058": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1059": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1060": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1065": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "AND",
      "path": "6"
    },
    "1066": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1068": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "SHL",
      "path": "6"
    },
    "1069": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1070": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1071": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1073": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ADD",
      "path": "6"
    },
    "1074": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "1076": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1078": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1079": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1080": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1081": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "SUB",
      "path": "6"
    },
    "1082": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1083": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1084": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "GAS",
      "path": "6"
    },
    "1085": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1086": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1087": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1088": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1089": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44E"
    },
    "1092": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1093": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1094": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1096": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1097": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1098": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1099": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1101": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1102": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1103": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "POP",
      "path": "6"
    },
    "1104": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "POP",
      "path": "6"
    },
    "1105": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "POP",
      "path": "6"
    },
    "1106": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "POP",
      "path": "6"
    },
    "1107": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1109": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1110": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1111": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1113": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "NOT",
      "path": "6"
    },
    "1114": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1116": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1117": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ADD",
      "path": "6"
    },
    "1118": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "AND",
      "path": "6"
    },
    "1119": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1120": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ADD",
      "path": "6"
    },
    "1121": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1122": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1124": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1125": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "POP",
      "path": "6"
    },
    "1126": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1127": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "ADD",
      "path": "6"
    },
    "1128": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1129": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x472"
    },
    "1132": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1133": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1134": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBAA"
    },
    "1137": {
      "fn": "Locker.getLatestPrice",
      "jump": "i",
      "offset": [
        3620,
        3651
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1138": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3620,
        3651
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3448,
        3651
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1141": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3448,
        3651
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3689,
        3699
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0x2540BE400"
    },
    "1149": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3689,
        3699
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3662,
        3686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1153": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3662,
        3686
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x48E"
    },
    "1158": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3733,
        3769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3448,
        3651
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1161": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3689,
        3699
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1162": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3733,
        3751
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x993"
    },
    "1165": {
      "fn": "Locker.getLatestPrice",
      "jump": "i",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1166": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1167": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3709,
        3769
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1168": {
      "fn": "Locker.getLatestPrice",
      "offset": [
        3382,
        3807
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "POP"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "fn": "Locker.getLatestPrice",
      "jump": "o",
      "offset": [
        3382,
        3807
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1174": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1175": {
      "offset": [
        1604,
        1613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1177": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        1604,
        1613
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "offset": [
        1604,
        1613
      ],
      "op": "AND",
      "path": "6"
    },
    "1187": {
      "offset": [
        1590,
        1600
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1188": {
      "offset": [
        1590,
        1613
      ],
      "op": "EQ",
      "path": "6"
    },
    "1189": {
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AD"
    },
    "1192": {
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1193": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1195": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        1582,
        1614
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1196": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        1582,
        1614
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1197": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1198": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2809,
        2819
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x9"
    },
    "1200": {
      "fn": "Locker.setPlpdPrice",
      "offset": [
        2809,
        2827
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1201": {
      "fn": "Locker.setPlpdPrice",
      "jump": "o",
      "offset": [
        2746,
        2834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1202": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1203": {
      "offset": [
        1481,
        1499
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1205": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1499
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1206": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1499
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1207": {
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1209": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1210": {
      "op": "PUSH4",
      "value": "0x4D8C928D"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "offset": [
        1481,
        1521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1219": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1220": {
      "offset": [
        1510,
        1520
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1221": {
      "offset": [
        1481,
        1521
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1222": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1223": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ADD",
      "path": "6"
    },
    "1224": {
      "op": "SWAP3"
    },
    "1225": {
      "op": "SWAP1"
    },
    "1226": {
      "op": "SWAP3"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "offset": [
        1481,
        1499
      ],
      "op": "AND",
      "path": "6"
    },
    "1237": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1499
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1238": {
      "offset": [
        1481,
        1509
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9B19251A"
    },
    "1243": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1509
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1249": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1251": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1252": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1253": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1254": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "SUB",
      "path": "6"
    },
    "1255": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1256": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1257": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "GAS",
      "path": "6"
    },
    "1258": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1259": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1260": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1261": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1262": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FB"
    },
    "1265": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1266": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1267": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1269": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1270": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1271": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1272": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1274": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1275": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1276": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "POP",
      "path": "6"
    },
    "1277": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "POP",
      "path": "6"
    },
    "1278": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "POP",
      "path": "6"
    },
    "1279": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "POP",
      "path": "6"
    },
    "1280": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1282": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1283": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1284": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1286": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "NOT",
      "path": "6"
    },
    "1287": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1289": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1290": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ADD",
      "path": "6"
    },
    "1291": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "AND",
      "path": "6"
    },
    "1292": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1293": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ADD",
      "path": "6"
    },
    "1294": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1295": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1297": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1298": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "POP",
      "path": "6"
    },
    "1299": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1300": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "ADD",
      "path": "6"
    },
    "1301": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1302": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x51F"
    },
    "1305": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1306": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1307": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBFA"
    },
    "1310": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1481,
        1521
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1311": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1521
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1312": {
      "offset": [
        1481,
        1529
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1313": {
      "fn": "Locker.lock",
      "offset": [
        1481,
        1529
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1314": {
      "offset": [
        1525,
        1529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1316": {
      "offset": [
        1481,
        1529
      ],
      "op": "EQ",
      "path": "6"
    },
    "1317": {
      "offset": [
        1473,
        1530
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x52D"
    },
    "1320": {
      "offset": [
        1473,
        1530
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1321": {
      "fn": "Locker.lock",
      "offset": [
        1473,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1323": {
      "fn": "Locker.lock",
      "offset": [
        1473,
        1530
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1324": {
      "fn": "Locker.lock",
      "offset": [
        1473,
        1530
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1325": {
      "fn": "Locker.lock",
      "offset": [
        1473,
        1530
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1326": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x7"
    },
    "1328": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1335": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "DIV",
      "path": "6"
    },
    "1336": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1338": {
      "fn": "Locker.lock",
      "offset": [
        1790,
        1798
      ],
      "op": "AND",
      "path": "6"
    },
    "1339": {
      "branch": 17,
      "fn": "Locker.lock",
      "offset": [
        1790,
        1807
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1340": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59A"
    },
    "1343": {
      "branch": 17,
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1344": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1346": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1355": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1358": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1360": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1361": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "ADD",
      "path": "6"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH32",
      "value": "0x4C6F636B65723A20596F752063616E6E6F74206C6F636B20617420746865206D"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH5",
      "value": "0x1BDB595B9D"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1426": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1428": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1429": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1430": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1431": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "SUB",
      "path": "6"
    },
    "1432": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1433": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "1434": {
      "fn": "Locker.lock",
      "offset": [
        1782,
        1849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1435": {
      "fn": "Locker.lock",
      "offset": [
        1860,
        1876
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1437": {
      "fn": "Locker.lock",
      "offset": [
        1879,
        1895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A4"
    },
    "1440": {
      "fn": "Locker.lock",
      "offset": [
        1879,
        1893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F8"
    },
    "1443": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1879,
        1895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1444": {
      "fn": "Locker.lock",
      "offset": [
        1879,
        1895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1445": {
      "fn": "Locker.lock",
      "offset": [
        1940,
        1950
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1446": {
      "fn": "Locker.lock",
      "offset": [
        1906,
        1930
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1448": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1449": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1450": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1451": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1453": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1454": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1455": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1456": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1458": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1459": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1460": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1461": {
      "fn": "Locker.lock",
      "offset": [
        1860,
        1895
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1462": {
      "fn": "Locker.lock",
      "offset": [
        1860,
        1895
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "Locker.lock",
      "offset": [
        2038,
        2042
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "1473": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D4"
    },
    "1476": {
      "fn": "Locker.lock",
      "offset": [
        1860,
        1895
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1477": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CE"
    },
    "1480": {
      "fn": "Locker.lock",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1481": {
      "fn": "Locker.lock",
      "offset": [
        2009,
        2020
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1482": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A6"
    },
    "1485": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1988,
        2021
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1486": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1487": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1488": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2025
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x993"
    },
    "1491": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1492": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1493": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DE"
    },
    "1496": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2042
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1497": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2042
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1498": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1C"
    },
    "1501": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        1988,
        2042
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1502": {
      "fn": "Locker.lock",
      "offset": [
        1988,
        2042
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1503": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1505": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2099
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1506": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2099
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1507": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1509": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1510": {
      "op": "PUSH4",
      "value": "0x389D78F1"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1519": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1520": {
      "fn": "Locker.lock",
      "offset": [
        2116,
        2126
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1521": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1522": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1523": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1524": {
      "op": "SWAP3"
    },
    "1525": {
      "op": "SWAP1"
    },
    "1526": {
      "op": "SWAP3"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "fn": "Locker.lock",
      "offset": [
        1961,
        2042
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1529": {
      "fn": "Locker.lock",
      "offset": [
        1961,
        2042
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "fn": "Locker.lock",
      "offset": [
        2053,
        2078
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1533": {
      "fn": "Locker.lock",
      "offset": [
        2053,
        2078
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2099
      ],
      "op": "AND",
      "path": "6"
    },
    "1543": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2099
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1544": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2115
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x389D78F1"
    },
    "1549": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2115
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1552": {
      "op": "ADD"
    },
    "1553": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1555": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1557": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1558": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1559": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1560": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "SUB",
      "path": "6"
    },
    "1561": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1562": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1563": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "GAS",
      "path": "6"
    },
    "1564": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1565": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1566": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1567": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1568": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62D"
    },
    "1571": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1572": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1573": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1575": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1576": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1577": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1578": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1580": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1581": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1582": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1583": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1584": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1585": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1586": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1588": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1589": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1590": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1592": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "NOT",
      "path": "6"
    },
    "1593": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1595": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1596": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1597": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "AND",
      "path": "6"
    },
    "1598": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1599": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1600": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1601": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1603": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1604": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1605": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1606": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1607": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1608": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x651"
    },
    "1611": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1612": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1613": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB48"
    },
    "1616": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2081,
        2127
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1617": {
      "fn": "Locker.lock",
      "offset": [
        2081,
        2127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1618": {
      "fn": "Locker.lock",
      "offset": [
        2053,
        2127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1619": {
      "fn": "Locker.lock",
      "offset": [
        2053,
        2127
      ],
      "op": "POP",
      "path": "6"
    },
    "1620": {
      "fn": "Locker.lock",
      "offset": [
        2141,
        2158
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1621": {
      "fn": "Locker.lock",
      "offset": [
        2162,
        2163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1623": {
      "branch": 18,
      "fn": "Locker.lock",
      "offset": [
        2141,
        2163
      ],
      "op": "SUB",
      "path": "6"
    },
    "1624": {
      "fn": "Locker.lock",
      "offset": [
        2137,
        2252
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C9"
    },
    "1627": {
      "branch": 18,
      "fn": "Locker.lock",
      "offset": [
        2137,
        2252
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1628": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x4"
    },
    "1630": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1631": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1632": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1634": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1635": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1636": {
      "op": "PUSH4",
      "value": "0x1E16A469"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1645": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1646": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1647": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "SUB"
    },
    "1656": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1657": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1658": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "AND",
      "path": "6"
    },
    "1659": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1660": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2239
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3C2D48D2"
    },
    "1665": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2239
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1666": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1667": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1668": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ADD",
      "path": "6"
    },
    "1669": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1670": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1672": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1673": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1674": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1675": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1676": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SUB",
      "path": "6"
    },
    "1677": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ADD",
      "path": "6"
    },
    "1678": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1679": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2217
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1680": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "GAS",
      "path": "6"
    },
    "1681": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1682": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1683": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1684": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1685": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A2"
    },
    "1688": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1689": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1690": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1692": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1693": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1694": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1695": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1697": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1698": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1699": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1700": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1701": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1702": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1703": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1705": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1706": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1707": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1709": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "NOT",
      "path": "6"
    },
    "1710": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1712": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1713": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ADD",
      "path": "6"
    },
    "1714": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "AND",
      "path": "6"
    },
    "1715": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1716": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ADD",
      "path": "6"
    },
    "1717": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1718": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1720": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1721": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1722": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1723": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "ADD",
      "path": "6"
    },
    "1724": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1725": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C6"
    },
    "1728": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1729": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1730": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB48"
    },
    "1733": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2199,
        2241
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1734": {
      "fn": "Locker.lock",
      "offset": [
        2199,
        2241
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1735": {
      "fn": "Locker.lock",
      "offset": [
        2179,
        2241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1736": {
      "fn": "Locker.lock",
      "offset": [
        2179,
        2241
      ],
      "op": "POP",
      "path": "6"
    },
    "1737": {
      "fn": "Locker.lock",
      "offset": [
        2137,
        2252
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1738": {
      "fn": "Locker.lock",
      "offset": [
        2302,
        2319
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 7
    },
    "1739": {
      "fn": "Locker.lock",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1740": {
      "branch": 19,
      "fn": "Locker.lock",
      "offset": [
        2283,
        2319
      ],
      "op": "LT",
      "path": "6"
    },
    "1741": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x73E"
    },
    "1744": {
      "branch": 19,
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1745": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1747": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1756": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1759": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1761": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1762": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "ADD",
      "path": "6"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "ADD"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "PUSH32",
      "value": "0x4C6F636B65723A20796F752063616E6E6F7420616C6C6F63617465206D6F7265"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1806": {
      "op": "DUP3"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "MSTORE"
    },
    "1809": {
      "op": "PUSH32",
      "value": "0x207468616E206D617820616C6C6F636174696F6E2076616C7565000000000000"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1844": {
      "op": "DUP3"
    },
    "1845": {
      "op": "ADD"
    },
    "1846": {
      "op": "MSTORE"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x591"
    },
    "1853": {
      "op": "JUMP"
    },
    "1854": {
      "fn": "Locker.lock",
      "offset": [
        2262,
        2394
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1855": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x2"
    },
    "1857": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1858": {
      "fn": "Locker.lock",
      "offset": [
        2443,
        2452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1860": {
      "fn": "Locker.lock",
      "offset": [
        2443,
        2452
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1861": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1863": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1864": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1873": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1874": {
      "fn": "Locker.lock",
      "offset": [
        2431,
        2441
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1875": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1877": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1878": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ADD",
      "path": "6"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "op": "SUB"
    },
    "1888": {
      "fn": "Locker.lock",
      "offset": [
        2443,
        2452
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1889": {
      "fn": "Locker.lock",
      "offset": [
        2443,
        2452
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1890": {
      "fn": "Locker.lock",
      "offset": [
        2443,
        2452
      ],
      "op": "AND",
      "path": "6"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1893": {
      "op": "DUP3"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "MSTORE"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1898": {
      "op": "DUP2"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "DUP9"
    },
    "1901": {
      "op": "SWAP1"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2417
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1904": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "6"
    },
    "1905": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2417
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1906": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2430
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1911": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2430
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1914": {
      "op": "ADD"
    },
    "1915": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1917": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1919": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1920": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1921": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1922": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "SUB",
      "path": "6"
    },
    "1923": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1924": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1926": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1927": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "GAS",
      "path": "6"
    },
    "1928": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "CALL",
      "path": "6"
    },
    "1929": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1930": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1931": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1932": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x799"
    },
    "1935": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1936": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1937": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1939": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1940": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1941": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1942": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1944": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1945": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1946": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1947": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1948": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1949": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1950": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1952": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1953": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1954": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1956": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "NOT",
      "path": "6"
    },
    "1957": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1959": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1960": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ADD",
      "path": "6"
    },
    "1961": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "AND",
      "path": "6"
    },
    "1962": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1963": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ADD",
      "path": "6"
    },
    "1964": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1965": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1967": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1968": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1969": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1970": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "ADD",
      "path": "6"
    },
    "1971": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1972": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7BD"
    },
    "1975": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1976": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1977": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBFA"
    },
    "1980": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2405,
        2466
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1981": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1982": {
      "fn": "Locker.lock",
      "offset": [
        2405,
        2466
      ],
      "op": "POP",
      "path": "6"
    },
    "1983": {
      "fn": "Locker.lock",
      "offset": [
        2477,
        2495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1985": {
      "fn": "Locker.lock",
      "offset": [
        2533,
        2537
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "1994": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7DE"
    },
    "1997": {
      "fn": "Locker.lock",
      "offset": [
        2519,
        2529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1999": {
      "fn": "Locker.lock",
      "offset": [
        2519,
        2529
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2000": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2514
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2001": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2518
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x993"
    },
    "2004": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2518
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2005": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2006": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2007": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2012": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "AND",
      "path": "6"
    },
    "2013": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2498,
        2530
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2014": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2530
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2015": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E8"
    },
    "2018": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2537
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2019": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2020": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1C"
    },
    "2023": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2498,
        2537
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2024": {
      "fn": "Locker.lock",
      "offset": [
        2498,
        2537
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2025": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x3"
    },
    "2027": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2560
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2028": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2030": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2031": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2040": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2041": {
      "fn": "Locker.lock",
      "offset": [
        2566,
        2576
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2042": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2044": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2045": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "ADD",
      "path": "6"
    },
    "2046": {
      "op": "MSTORE"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2049": {
      "op": "DUP2"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "DUP4"
    },
    "2052": {
      "op": "SWAP1"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "fn": "Locker.lock",
      "offset": [
        2477,
        2537
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2055": {
      "fn": "Locker.lock",
      "offset": [
        2477,
        2537
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2560
      ],
      "op": "AND",
      "path": "6"
    },
    "2066": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2560
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2067": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2565
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40C10F19"
    },
    "2072": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2565
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2078": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2080": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2081": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2082": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2083": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "SUB",
      "path": "6"
    },
    "2084": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2085": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2087": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2088": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2089": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2090": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2091": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2092": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2093": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x835"
    },
    "2096": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2097": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2099": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2100": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2101": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2102": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "POP",
      "path": "6"
    },
    "2103": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "GAS",
      "path": "6"
    },
    "2104": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "CALL",
      "path": "6"
    },
    "2105": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2106": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2107": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2108": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x849"
    },
    "2111": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2112": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2113": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2115": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2116": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2117": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2118": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2120": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2121": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2122": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "POP",
      "path": "6"
    },
    "2123": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "POP",
      "path": "6"
    },
    "2124": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "POP",
      "path": "6"
    },
    "2125": {
      "fn": "Locker.lock",
      "offset": [
        2547,
        2589
      ],
      "op": "POP",
      "path": "6"
    },
    "2126": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 10,
      "value": "0x860"
    },
    "2129": {
      "fn": "Locker.lock",
      "offset": [
        2642,
        2653
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2130": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2637
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2131": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A6"
    },
    "2134": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2135": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2136": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2137": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2142": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "AND",
      "path": "6"
    },
    "2143": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2621,
        2654
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2144": {
      "fn": "Locker.lock",
      "offset": [
        2621,
        2654
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2145": {
      "fn": "Locker.lock",
      "offset": [
        2607,
        2617
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2146": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2606
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2148": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2149": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2150": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2151": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2153": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2154": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2155": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2156": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2158": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2159": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2160": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2618
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2161": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2654
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2162": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2654
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2163": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2654
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2164": {
      "fn": "Locker.lock",
      "offset": [
        2600,
        2654
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2165": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2707
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x1"
    },
    "2167": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2168": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2169": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2170": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2171": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2172": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2173": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2174": {
      "fn": "Locker.lock",
      "offset": [
        2607,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2175": {
      "fn": "Locker.lock",
      "offset": [
        2607,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2176": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x91041D6C7A6291CC5133C2D75E882EAB111EBFD14EDB82460A95C2835E017E74"
    },
    "2209": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2210": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AD"
    },
    "2213": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2214": {
      "fn": "Locker.lock",
      "offset": [
        2689,
        2719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2215": {
      "fn": "Locker.lock",
      "offset": [
        2721,
        2732
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2216": {
      "fn": "Locker.lock",
      "offset": [
        2721,
        2732
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2217": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC78"
    },
    "2220": {
      "fn": "Locker.lock",
      "jump": "i",
      "offset": [
        2670,
        2733
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2221": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2222": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2224": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2225": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2226": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2227": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SUB",
      "path": "6"
    },
    "2228": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2229": {
      "fn": "Locker.lock",
      "offset": [
        2670,
        2733
      ],
      "op": "LOG2",
      "path": "6"
    },
    "2230": {
      "fn": "Locker.lock",
      "offset": [
        1772,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2231": {
      "fn": "Locker.lock",
      "offset": [
        1772,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2232": {
      "fn": "Locker.lock",
      "offset": [
        1772,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2233": {
      "fn": "Locker.lock",
      "offset": [
        1772,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2234": {
      "fn": "Locker.lock",
      "offset": [
        1772,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2235": {
      "fn": "Locker.lock",
      "offset": [
        1718,
        2740
      ],
      "op": "POP",
      "path": "6"
    },
    "2236": {
      "fn": "Locker.lock",
      "jump": "o",
      "offset": [
        1718,
        2740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2237": {
      "fn": "Locker.activateBurning",
      "offset": [
        2840,
        2961
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2238": {
      "offset": [
        1604,
        1613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2240": {
      "fn": "Locker.activateBurning",
      "offset": [
        1604,
        1613
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "offset": [
        1604,
        1613
      ],
      "op": "AND",
      "path": "6"
    },
    "2250": {
      "offset": [
        1590,
        1600
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2251": {
      "offset": [
        1590,
        1613
      ],
      "op": "EQ",
      "path": "6"
    },
    "2252": {
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D4"
    },
    "2255": {
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2256": {
      "fn": "Locker.activateBurning",
      "offset": [
        1582,
        1614
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2258": {
      "fn": "Locker.activateBurning",
      "offset": [
        1582,
        1614
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2259": {
      "fn": "Locker.activateBurning",
      "offset": [
        1582,
        1614
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2260": {
      "fn": "Locker.activateBurning",
      "offset": [
        1582,
        1614
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2261": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x7"
    },
    "2263": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2264": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "op": "NOT"
    },
    "2271": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2272": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "AND",
      "path": "6"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2277": {
      "op": "SHL"
    },
    "2278": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2279": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2280": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2281": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "DIV",
      "path": "6"
    },
    "2282": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2284": {
      "fn": "Locker.activateBurning",
      "offset": [
        2905,
        2913
      ],
      "op": "AND",
      "path": "6"
    },
    "2285": {
      "fn": "Locker.activateBurning",
      "offset": [
        2904,
        2913
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2286": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2287": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2288": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "MUL",
      "path": "6"
    },
    "2289": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "OR",
      "path": "6"
    },
    "2290": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2291": {
      "fn": "Locker.activateBurning",
      "offset": [
        2893,
        2913
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2292": {
      "fn": "Locker.activateBurning",
      "offset": [
        2942,
        2954
      ],
      "op": "NUMBER",
      "path": "6",
      "statement": 13
    },
    "2293": {
      "fn": "Locker.activateBurning",
      "offset": [
        2923,
        2939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2295": {
      "fn": "Locker.activateBurning",
      "offset": [
        2923,
        2954
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2296": {
      "fn": "Locker.activateBurning",
      "jump": "o",
      "offset": [
        2840,
        2961
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2297": {
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2298": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2300": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2302": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2303": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2305": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2306": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2307": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2308": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2310": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2311": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2312": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2313": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2314": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x912"
    },
    "2317": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2318": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3E"
    },
    "2321": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2322": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2323": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2324": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2326": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2327": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2329": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2330": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2331": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DIV",
      "path": "6"
    },
    "2332": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MUL",
      "path": "6"
    },
    "2333": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2335": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2336": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2338": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2339": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2340": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2341": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2342": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2344": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2345": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2346": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2347": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2348": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2349": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2350": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2351": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2352": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2354": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2355": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2356": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2357": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2358": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93E"
    },
    "2361": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2362": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3E"
    },
    "2365": {
      "fn": "Locker.activateBurning",
      "jump": "i",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2366": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2367": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2368": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2369": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98B"
    },
    "2372": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2373": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2374": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2376": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "LT",
      "path": "6"
    },
    "2377": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x960"
    },
    "2380": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2381": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2384": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2385": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2386": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2387": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DIV",
      "path": "6"
    },
    "2388": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MUL",
      "path": "6"
    },
    "2389": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2390": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2391": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2392": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2394": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2395": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2396": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98B"
    },
    "2399": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2400": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2401": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2402": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2403": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2404": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2405": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2407": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2408": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2410": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2412": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2413": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2414": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2415": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2416": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2417": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2418": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2419": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2420": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2422": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2423": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2424": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2426": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2427": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2428": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2429": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "GT",
      "path": "6"
    },
    "2430": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x96E"
    },
    "2433": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2434": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2435": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2436": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SUB",
      "path": "6"
    },
    "2437": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2439": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "AND",
      "path": "6"
    },
    "2440": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2441": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "ADD",
      "path": "6"
    },
    "2442": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2443": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2444": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "POP",
      "path": "6"
    },
    "2445": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "POP",
      "path": "6"
    },
    "2446": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "POP",
      "path": "6"
    },
    "2447": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "POP",
      "path": "6"
    },
    "2448": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "POP",
      "path": "6"
    },
    "2449": {
      "fn": "Locker.activateBurning",
      "offset": [
        409,
        463
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2450": {
      "fn": "Locker.activateBurning",
      "jump": "o",
      "offset": [
        409,
        463
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2451": {
      "fn": "SafeMath.mul",
      "offset": [
        3465,
        3561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2452": {
      "fn": "SafeMath.mul",
      "offset": [
        3523,
        3530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2454": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x99F"
    },
    "2457": {
      "fn": "SafeMath.mul",
      "offset": [
        3553,
        3554
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2458": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3550
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2459": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD27"
    },
    "2462": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3549,
        3554
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2463": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2464": {
      "fn": "SafeMath.mul",
      "offset": [
        3542,
        3554
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2465": {
      "fn": "SafeMath.mul",
      "offset": [
        3465,
        3561
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3465,
        3561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2470": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2851
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2471": {
      "fn": "SafeMath.add",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2473": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x99F"
    },
    "2476": {
      "fn": "SafeMath.add",
      "offset": [
        2843,
        2844
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2477": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2840
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2478": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD46"
    },
    "2481": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2839,
        2844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2482": {
      "op": "JUMPDEST"
    },
    "2483": {
      "op": "DUP1"
    },
    "2484": {
      "op": "CALLDATALOAD"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "SUB"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "AND"
    },
    "2495": {
      "op": "DUP2"
    },
    "2496": {
      "op": "EQ"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2500": {
      "op": "JUMPI"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2503": {
      "op": "DUP1"
    },
    "2504": {
      "op": "REVERT"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "SWAP2"
    },
    "2507": {
      "op": "SWAP1"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "jump": "o",
      "op": "JUMP"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2515": {
      "op": "DUP3"
    },
    "2516": {
      "op": "DUP5"
    },
    "2517": {
      "op": "SUB"
    },
    "2518": {
      "op": "SLT"
    },
    "2519": {
      "op": "ISZERO"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "2523": {
      "op": "JUMPI"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "DUP1"
    },
    "2527": {
      "op": "REVERT"
    },
    "2528": {
      "op": "JUMPDEST"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x99F"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "PUSH2",
      "value": "0x9B2"
    },
    "2536": {
      "jump": "i",
      "op": "JUMP"
    },
    "2537": {
      "op": "JUMPDEST"
    },
    "2538": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2548": {
      "op": "MSTORE"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2558": {
      "op": "REVERT"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2564": {
      "op": "DUP1"
    },
    "2565": {
      "op": "DUP4"
    },
    "2566": {
      "op": "DUP6"
    },
    "2567": {
      "op": "SUB"
    },
    "2568": {
      "op": "SLT"
    },
    "2569": {
      "op": "ISZERO"
    },
    "2570": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2573": {
      "op": "JUMPI"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2576": {
      "op": "DUP1"
    },
    "2577": {
      "op": "REVERT"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "DUP3"
    },
    "2580": {
      "op": "CALLDATALOAD"
    },
    "2581": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2590": {
      "op": "DUP1"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "GT"
    },
    "2593": {
      "op": "ISZERO"
    },
    "2594": {
      "op": "PUSH2",
      "value": "0xA2A"
    },
    "2597": {
      "op": "JUMPI"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2600": {
      "op": "DUP1"
    },
    "2601": {
      "op": "REVERT"
    },
    "2602": {
      "op": "JUMPDEST"
    },
    "2603": {
      "op": "DUP2"
    },
    "2604": {
      "op": "DUP6"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "op": "SWAP2"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "op": "DUP6"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2611": {
      "op": "DUP4"
    },
    "2612": {
      "op": "ADD"
    },
    "2613": {
      "op": "SLT"
    },
    "2614": {
      "op": "PUSH2",
      "value": "0xA3E"
    },
    "2617": {
      "op": "JUMPI"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2620": {
      "op": "DUP1"
    },
    "2621": {
      "op": "REVERT"
    },
    "2622": {
      "op": "JUMPDEST"
    },
    "2623": {
      "op": "DUP2"
    },
    "2624": {
      "op": "CALLDATALOAD"
    },
    "2625": {
      "op": "DUP2"
    },
    "2626": {
      "op": "DUP2"
    },
    "2627": {
      "op": "GT"
    },
    "2628": {
      "op": "ISZERO"
    },
    "2629": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2632": {
      "op": "JUMPI"
    },
    "2633": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2636": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2639": {
      "jump": "i",
      "op": "JUMP"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2647": {
      "op": "MLOAD"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2650": {
      "op": "NOT"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2653": {
      "op": "DUP4"
    },
    "2654": {
      "op": "ADD"
    },
    "2655": {
      "op": "AND"
    },
    "2656": {
      "op": "DUP2"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "DUP2"
    },
    "2660": {
      "op": "LT"
    },
    "2661": {
      "op": "DUP6"
    },
    "2662": {
      "op": "DUP3"
    },
    "2663": {
      "op": "GT"
    },
    "2664": {
      "op": "OR"
    },
    "2665": {
      "op": "ISZERO"
    },
    "2666": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "2669": {
      "op": "JUMPI"
    },
    "2670": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "2673": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2676": {
      "jump": "i",
      "op": "JUMP"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "SWAP2"
    },
    "2682": {
      "op": "DUP3"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "DUP5"
    },
    "2685": {
      "op": "DUP3"
    },
    "2686": {
      "op": "ADD"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "op": "DUP4"
    },
    "2690": {
      "op": "DUP2"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "DUP6"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "SWAP2"
    },
    "2695": {
      "op": "DUP9"
    },
    "2696": {
      "op": "DUP4"
    },
    "2697": {
      "op": "GT"
    },
    "2698": {
      "op": "ISZERO"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0xA93"
    },
    "2702": {
      "op": "JUMPI"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2705": {
      "op": "DUP1"
    },
    "2706": {
      "op": "REVERT"
    },
    "2707": {
      "op": "JUMPDEST"
    },
    "2708": {
      "op": "SWAP4"
    },
    "2709": {
      "op": "DUP6"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "SWAP4"
    },
    "2712": {
      "op": "JUMPDEST"
    },
    "2713": {
      "op": "DUP3"
    },
    "2714": {
      "op": "DUP6"
    },
    "2715": {
      "op": "LT"
    },
    "2716": {
      "op": "ISZERO"
    },
    "2717": {
      "op": "PUSH2",
      "value": "0xAB8"
    },
    "2720": {
      "op": "JUMPI"
    },
    "2721": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "2724": {
      "op": "DUP6"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0x9B2"
    },
    "2728": {
      "jump": "i",
      "op": "JUMP"
    },
    "2729": {
      "op": "JUMPDEST"
    },
    "2730": {
      "op": "DUP5"
    },
    "2731": {
      "op": "MSTORE"
    },
    "2732": {
      "op": "SWAP4"
    },
    "2733": {
      "op": "DUP6"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "SWAP4"
    },
    "2736": {
      "op": "SWAP3"
    },
    "2737": {
      "op": "DUP6"
    },
    "2738": {
      "op": "ADD"
    },
    "2739": {
      "op": "SWAP3"
    },
    "2740": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2743": {
      "op": "JUMP"
    },
    "2744": {
      "op": "JUMPDEST"
    },
    "2745": {
      "op": "SWAP9"
    },
    "2746": {
      "op": "SWAP8"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "jump": "o",
      "op": "JUMP"
    },
    "2756": {
      "op": "JUMPDEST"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2761": {
      "op": "DUP3"
    },
    "2762": {
      "op": "DUP5"
    },
    "2763": {
      "op": "SUB"
    },
    "2764": {
      "op": "SLT"
    },
    "2765": {
      "op": "ISZERO"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0xAD6"
    },
    "2769": {
      "op": "JUMPI"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2772": {
      "op": "DUP1"
    },
    "2773": {
      "op": "REVERT"
    },
    "2774": {
      "op": "JUMPDEST"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "CALLDATALOAD"
    },
    "2777": {
      "op": "SWAP2"
    },
    "2778": {
      "op": "SWAP1"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "jump": "o",
      "op": "JUMP"
    },
    "2781": {
      "op": "JUMPDEST"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "DUP1"
    },
    "2787": {
      "op": "DUP4"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "op": "DUP4"
    },
    "2790": {
      "op": "MLOAD"
    },
    "2791": {
      "op": "DUP1"
    },
    "2792": {
      "op": "DUP3"
    },
    "2793": {
      "op": "DUP6"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2798": {
      "op": "JUMPDEST"
    },
    "2799": {
      "op": "DUP2"
    },
    "2800": {
      "op": "DUP2"
    },
    "2801": {
      "op": "LT"
    },
    "2802": {
      "op": "ISZERO"
    },
    "2803": {
      "op": "PUSH2",
      "value": "0xB0A"
    },
    "2806": {
      "op": "JUMPI"
    },
    "2807": {
      "op": "DUP6"
    },
    "2808": {
      "op": "DUP2"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "DUP4"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MLOAD"
    },
    "2813": {
      "op": "DUP6"
    },
    "2814": {
      "op": "DUP3"
    },
    "2815": {
      "op": "ADD"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "DUP3"
    },
    "2821": {
      "op": "ADD"
    },
    "2822": {
      "op": "PUSH2",
      "value": "0xAEE"
    },
    "2825": {
      "op": "JUMP"
    },
    "2826": {
      "op": "JUMPDEST"
    },
    "2827": {
      "op": "DUP2"
    },
    "2828": {
      "op": "DUP2"
    },
    "2829": {
      "op": "GT"
    },
    "2830": {
      "op": "ISZERO"
    },
    "2831": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2834": {
      "op": "JUMPI"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2839": {
      "op": "DUP4"
    },
    "2840": {
      "op": "DUP8"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "op": "ADD"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "POP"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2851": {
      "op": "NOT"
    },
    "2852": {
      "op": "AND"
    },
    "2853": {
      "op": "SWAP3"
    },
    "2854": {
      "op": "SWAP1"
    },
    "2855": {
      "op": "SWAP3"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2859": {
      "op": "ADD"
    },
    "2860": {
      "op": "SWAP4"
    },
    "2861": {
      "op": "SWAP3"
    },
    "2862": {
      "op": "POP"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "jump": "o",
      "op": "JUMP"
    },
    "2866": {
      "op": "JUMPDEST"
    },
    "2867": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2877": {
      "op": "MSTORE"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2882": {
      "op": "MSTORE"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2887": {
      "op": "REVERT"
    },
    "2888": {
      "op": "JUMPDEST"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "DUP5"
    },
    "2895": {
      "op": "SUB"
    },
    "2896": {
      "op": "SLT"
    },
    "2897": {
      "op": "ISZERO"
    },
    "2898": {
      "op": "PUSH2",
      "value": "0xB5A"
    },
    "2901": {
      "op": "JUMPI"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2904": {
      "op": "DUP1"
    },
    "2905": {
      "op": "REVERT"
    },
    "2906": {
      "op": "JUMPDEST"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "MLOAD"
    },
    "2909": {
      "op": "SWAP2"
    },
    "2910": {
      "op": "SWAP1"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "jump": "o",
      "op": "JUMP"
    },
    "2913": {
      "op": "JUMPDEST"
    },
    "2914": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2921": {
      "op": "SHL"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2924": {
      "op": "MSTORE"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2929": {
      "op": "MSTORE"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "REVERT"
    },
    "2935": {
      "op": "JUMPDEST"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "DUP3"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "2945": {
      "op": "JUMPI"
    },
    "2946": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "2949": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "2952": {
      "jump": "i",
      "op": "JUMP"
    },
    "2953": {
      "op": "JUMPDEST"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "SWAP1"
    },
    "2959": {
      "jump": "o",
      "op": "JUMP"
    },
    "2960": {
      "op": "JUMPDEST"
    },
    "2961": {
      "op": "DUP1"
    },
    "2962": {
      "op": "MLOAD"
    },
    "2963": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "2974": {
      "op": "DUP2"
    },
    "2975": {
      "op": "AND"
    },
    "2976": {
      "op": "DUP2"
    },
    "2977": {
      "op": "EQ"
    },
    "2978": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2981": {
      "op": "JUMPI"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2984": {
      "op": "DUP1"
    },
    "2985": {
      "op": "REVERT"
    },
    "2986": {
      "op": "JUMPDEST"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2989": {
      "op": "DUP1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2992": {
      "op": "DUP1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2997": {
      "op": "DUP7"
    },
    "2998": {
      "op": "DUP9"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "op": "SLT"
    },
    "3001": {
      "op": "ISZERO"
    },
    "3002": {
      "op": "PUSH2",
      "value": "0xBC2"
    },
    "3005": {
      "op": "JUMPI"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3008": {
      "op": "DUP1"
    },
    "3009": {
      "op": "REVERT"
    },
    "3010": {
      "op": "JUMPDEST"
    },
    "3011": {
      "op": "PUSH2",
      "value": "0xBCB"
    },
    "3014": {
      "op": "DUP7"
    },
    "3015": {
      "op": "PUSH2",
      "value": "0xB90"
    },
    "3018": {
      "jump": "i",
      "op": "JUMP"
    },
    "3019": {
      "op": "JUMPDEST"
    },
    "3020": {
      "op": "SWAP5"
    },
    "3021": {
      "op": "POP"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3024": {
      "op": "DUP7"
    },
    "3025": {
      "op": "ADD"
    },
    "3026": {
      "op": "MLOAD"
    },
    "3027": {
      "op": "SWAP4"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3031": {
      "op": "DUP7"
    },
    "3032": {
      "op": "ADD"
    },
    "3033": {
      "op": "MLOAD"
    },
    "3034": {
      "op": "SWAP3"
    },
    "3035": {
      "op": "POP"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3038": {
      "op": "DUP7"
    },
    "3039": {
      "op": "ADD"
    },
    "3040": {
      "op": "MLOAD"
    },
    "3041": {
      "op": "SWAP2"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "op": "PUSH2",
      "value": "0xBEE"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3048": {
      "op": "DUP8"
    },
    "3049": {
      "op": "ADD"
    },
    "3050": {
      "op": "PUSH2",
      "value": "0xB90"
    },
    "3053": {
      "jump": "i",
      "op": "JUMP"
    },
    "3054": {
      "op": "JUMPDEST"
    },
    "3055": {
      "op": "SWAP1"
    },
    "3056": {
      "op": "POP"
    },
    "3057": {
      "op": "SWAP3"
    },
    "3058": {
      "op": "SWAP6"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "SWAP3"
    },
    "3061": {
      "op": "SWAP6"
    },
    "3062": {
      "op": "SWAP1"
    },
    "3063": {
      "op": "SWAP4"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "jump": "o",
      "op": "JUMP"
    },
    "3066": {
      "op": "JUMPDEST"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "DUP5"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "op": "SLT"
    },
    "3075": {
      "op": "ISZERO"
    },
    "3076": {
      "op": "PUSH2",
      "value": "0xC0C"
    },
    "3079": {
      "op": "JUMPI"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3082": {
      "op": "DUP1"
    },
    "3083": {
      "op": "REVERT"
    },
    "3084": {
      "op": "JUMPDEST"
    },
    "3085": {
      "op": "DUP2"
    },
    "3086": {
      "op": "MLOAD"
    },
    "3087": {
      "op": "DUP1"
    },
    "3088": {
      "op": "ISZERO"
    },
    "3089": {
      "op": "ISZERO"
    },
    "3090": {
      "op": "DUP2"
    },
    "3091": {
      "op": "EQ"
    },
    "3092": {
      "op": "PUSH2",
      "value": "0x99F"
    },
    "3095": {
      "op": "JUMPI"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3098": {
      "op": "DUP1"
    },
    "3099": {
      "op": "REVERT"
    },
    "3100": {
      "op": "JUMPDEST"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC39"
    },
    "3107": {
      "op": "JUMPI"
    },
    "3108": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3115": {
      "op": "SHL"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "REVERT"
    },
    "3129": {
      "op": "JUMPDEST"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "DIV"
    },
    "3132": {
      "op": "SWAP1"
    },
    "3133": {
      "jump": "o",
      "op": "JUMP"
    },
    "3134": {
      "op": "JUMPDEST"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "DUP2"
    },
    "3138": {
      "op": "DUP2"
    },
    "3139": {
      "op": "SHR"
    },
    "3140": {
      "op": "SWAP1"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "AND"
    },
    "3143": {
      "op": "DUP1"
    },
    "3144": {
      "op": "PUSH2",
      "value": "0xC52"
    },
    "3147": {
      "op": "JUMPI"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "AND"
    },
    "3152": {
      "op": "SWAP2"
    },
    "3153": {
      "op": "POP"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "op": "DUP3"
    },
    "3158": {
      "op": "LT"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "op": "PUSH2",
      "value": "0xC72"
    },
    "3164": {
      "op": "JUMPI"
    },
    "3165": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3175": {
      "op": "MSTORE"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3180": {
      "op": "MSTORE"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3185": {
      "op": "REVERT"
    },
    "3186": {
      "op": "JUMPDEST"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "SWAP2"
    },
    "3189": {
      "op": "SWAP1"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "jump": "o",
      "op": "JUMP"
    },
    "3192": {
      "op": "JUMPDEST"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3195": {
      "op": "DUP2"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3199": {
      "op": "DUP1"
    },
    "3200": {
      "op": "DUP5"
    },
    "3201": {
      "op": "SLOAD"
    },
    "3202": {
      "op": "DUP2"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "DUP3"
    },
    "3206": {
      "op": "DUP2"
    },
    "3207": {
      "op": "SHR"
    },
    "3208": {
      "op": "SWAP2"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "op": "DUP1"
    },
    "3211": {
      "op": "DUP4"
    },
    "3212": {
      "op": "AND"
    },
    "3213": {
      "op": "DUP1"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC98"
    },
    "3217": {
      "op": "JUMPI"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3220": {
      "op": "DUP4"
    },
    "3221": {
      "op": "AND"
    },
    "3222": {
      "op": "SWAP3"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "op": "JUMPDEST"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "op": "DUP1"
    },
    "3228": {
      "op": "DUP5"
    },
    "3229": {
      "op": "LT"
    },
    "3230": {
      "op": "DUP3"
    },
    "3231": {
      "op": "SUB"
    },
    "3232": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3235": {
      "op": "JUMPI"
    },
    "3236": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3243": {
      "op": "SHL"
    },
    "3244": {
      "op": "DUP7"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3253": {
      "op": "DUP7"
    },
    "3254": {
      "op": "REVERT"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3258": {
      "op": "DUP9"
    },
    "3259": {
      "op": "ADD"
    },
    "3260": {
      "op": "DUP5"
    },
    "3261": {
      "op": "SWAP1"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3265": {
      "op": "DUP9"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "DUP1"
    },
    "3269": {
      "op": "ISZERO"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xCD6"
    },
    "3273": {
      "op": "JUMPI"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "DUP2"
    },
    "3277": {
      "op": "EQ"
    },
    "3278": {
      "op": "PUSH2",
      "value": "0xCE7"
    },
    "3281": {
      "op": "JUMPI"
    },
    "3282": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "3285": {
      "op": "JUMP"
    },
    "3286": {
      "op": "JUMPDEST"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3289": {
      "op": "NOT"
    },
    "3290": {
      "op": "DUP8"
    },
    "3291": {
      "op": "AND"
    },
    "3292": {
      "op": "DUP3"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "DUP3"
    },
    "3295": {
      "op": "DUP3"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "SWAP8"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "3302": {
      "op": "JUMP"
    },
    "3303": {
      "op": "JUMPDEST"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "DUP13"
    },
    "3307": {
      "op": "DUP2"
    },
    "3308": {
      "op": "MSTORE"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3311": {
      "op": "SWAP1"
    },
    "3312": {
      "op": "KECCAK256"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3315": {
      "op": "JUMPDEST"
    },
    "3316": {
      "op": "DUP8"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "LT"
    },
    "3319": {
      "op": "ISZERO"
    },
    "3320": {
      "op": "PUSH2",
      "value": "0xD0C"
    },
    "3323": {
      "op": "JUMPI"
    },
    "3324": {
      "op": "DUP2"
    },
    "3325": {
      "op": "SLOAD"
    },
    "3326": {
      "op": "DUP5"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "SWAP1"
    },
    "3331": {
      "op": "DUP7"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "SWAP1"
    },
    "3334": {
      "op": "DUP5"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "op": "PUSH2",
      "value": "0xCF3"
    },
    "3339": {
      "op": "JUMP"
    },
    "3340": {
      "op": "JUMPDEST"
    },
    "3341": {
      "op": "DUP4"
    },
    "3342": {
      "op": "ADD"
    },
    "3343": {
      "op": "SWAP9"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "POP"
    },
    "3346": {
      "op": "JUMPDEST"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "op": "SWAP7"
    },
    "3350": {
      "op": "SWAP1"
    },
    "3351": {
      "op": "SWAP7"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "op": "SWAP7"
    },
    "3354": {
      "op": "SWAP1"
    },
    "3355": {
      "op": "SWAP7"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "SWAP1"
    },
    "3359": {
      "op": "SWAP6"
    },
    "3360": {
      "op": "SWAP5"
    },
    "3361": {
      "op": "POP"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "op": "POP"
    },
    "3364": {
      "op": "POP"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "jump": "o",
      "op": "JUMP"
    },
    "3367": {
      "op": "JUMPDEST"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3370": {
      "op": "DUP2"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "NOT"
    },
    "3374": {
      "op": "DIV"
    },
    "3375": {
      "op": "DUP4"
    },
    "3376": {
      "op": "GT"
    },
    "3377": {
      "op": "DUP3"
    },
    "3378": {
      "op": "ISZERO"
    },
    "3379": {
      "op": "ISZERO"
    },
    "3380": {
      "op": "AND"
    },
    "3381": {
      "op": "ISZERO"
    },
    "3382": {
      "op": "PUSH2",
      "value": "0xD41"
    },
    "3385": {
      "op": "JUMPI"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD41"
    },
    "3389": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "3392": {
      "jump": "i",
      "op": "JUMP"
    },
    "3393": {
      "op": "JUMPDEST"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "op": "MUL"
    },
    "3396": {
      "op": "SWAP1"
    },
    "3397": {
      "jump": "o",
      "op": "JUMP"
    },
    "3398": {
      "op": "JUMPDEST"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3401": {
      "op": "DUP3"
    },
    "3402": {
      "op": "NOT"
    },
    "3403": {
      "op": "DUP3"
    },
    "3404": {
      "op": "GT"
    },
    "3405": {
      "op": "ISZERO"
    },
    "3406": {
      "op": "PUSH2",
      "value": "0xD59"
    },
    "3409": {
      "op": "JUMPI"
    },
    "3410": {
      "op": "PUSH2",
      "value": "0xD59"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "3416": {
      "jump": "i",
      "op": "JUMP"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "SWAP1"
    },
    "3421": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ab4d4a57bbecf6fa9a59a80c1685a3964ef8de99",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\nimport './PolkapadERC20.sol';\nimport './Whitelist.sol';\n\ncontract Locker {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) public _locks;\n    mapping (address => string)  public _polkadotAddresses;\n\n    ERC20           public _dotContract;\n    PolkapadERC20   public _plpdContract;\n    Whitelist       public _whitelistContract;\n\n    AggregatorV3Interface public _dotPriceFeed;\n\n    address public _multisig;\n    address public _burner;\n\n    bool public _canBurn;\n    uint public _burnBlockNumber;\n\n    uint256 public _plpdPrice;\n\n    event Locked(address indexed account, string polkadotAddress, uint256 allocation);\n    event Burned(address indexed account, uint256 burned);\n\n    constructor(\n        address multisig_,\n        address burner_,\n        address dotContract_, \n        address dotFeedContract_,\n        address plpdContract_,\n        address whitelistContract_) {\n        _multisig = multisig_;\n        _burner = burner_;\n\n        _plpdContract = PolkapadERC20(plpdContract_);\n        _dotContract = ERC20(dotContract_);\n        _whitelistContract = Whitelist(whitelistContract_);\n\n        _dotPriceFeed = AggregatorV3Interface(dotFeedContract_);\n    }\n\n    modifier whitelisted {\n        require(_whitelistContract.whitelist(msg.sender) == true);\n        _;\n    }\n\n    modifier multisig {\n        require(msg.sender == _multisig);\n        _;\n    }\n\n    modifier burner {\n        require(msg.sender == _burner);\n        _;\n    }\n\n    function lock(uint256 allocation_) public whitelisted {\n        require(_canBurn == false, \"Locker: You cannot lock at the moment\");\n\n        uint256 dotPrice = getLatestPrice();\n\n        uint256 lockedAllocation = _locks[msg.sender];\n        uint256 allocationInUsdt = lockedAllocation.add(allocation_).mul(dotPrice) / 1e18;\n\n        uint256 maxAllocationSize = _whitelistContract.allocationSizes(msg.sender);\n        if (maxAllocationSize == 0) {\n            maxAllocationSize = _whitelistContract.defaultAllocationSize();\n        }\n\n        require(\n            allocationInUsdt < maxAllocationSize,\n            \"Locker: you cannot allocate more than max allocation value\");\n\n        _dotContract.transferFrom(msg.sender, _multisig, allocation_);\n\n        uint256 plpdAmount = allocationInUsdt.mul(_plpdPrice) / 1e18;\n        _plpdContract.mint(msg.sender, plpdAmount);\n\n        _locks[msg.sender] = lockedAllocation.add(allocation_);\n\n        emit Locked(msg.sender, _polkadotAddresses[msg.sender], allocation_);\n    }\n\n    function setPlpdPrice(uint256 price) public multisig {\n        _plpdPrice = price;\n    }\n\n    function activateBurning() public multisig {\n        _canBurn = !_canBurn;\n        _burnBlockNumber = block.number;\n    }\n\n    function burnPlpd(address[] memory addresses_) public burner {\n        require(_canBurn == true);\n        \n        for (uint256 i = 0; i < addresses_.length; i++) {\n            address address_ = addresses_[i];\n            \n            uint256 plpdAmount = _plpdContract.balanceOf(address_);\n            _plpdContract.burn(address_, plpdAmount);\n\n            emit Burned(address_, plpdAmount);\n        }\n    }\n\n    function getLatestPrice() public view returns (uint256) {\n        (\n            /*uint80 roundID*/,\n            int price,\n            /*uint startedAt*/,\n            /*uint timeStamp*/,\n            /*uint80 answeredInRound*/\n        ) = _dotPriceFeed.latestRoundData();\n\n        uint256 adjustedDecimals = 1e18 / 1e8;\n        uint256 adjustedPrice = uint256(price).mul(adjustedDecimals);\n\n        return adjustedPrice;\n    }\n}\n",
  "sourceMap": "306:3503:6:-:0;;;949:487;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1156:9;:21;;-1:-1:-1;;;;;;1156:21:6;;;-1:-1:-1;;;;;1156:21:6;;;;;;;1187:7;:17;;;;;;;;;;;;;;1215:13;:44;;;;;;;;;;;;;;1269:12;:34;;;;;;;;;;;;;;-1:-1:-1;1313:50:6;;;;;;;;;;;;;;-1:-1:-1;1374:55:6;;;;;;;;;;;;;306:3503;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;:::-;306:3503:6;;;;;;",
  "sourcePath": "contracts/Locker.sol",
  "type": "contract"
}