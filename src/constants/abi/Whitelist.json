{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multisigAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddedToWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxAllocationSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxAllocationSize",
          "type": "uint256"
        }
      ],
      "name": "ChangedMaxAllocationSize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RemovedFromWhitelist",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocationSize_",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allocationSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMaxAllocationSize_",
          "type": "uint256"
        }
      ],
      "name": "changeAllocationSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAllocationSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multisigAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "allocationSize_",
          "type": "uint256"
        }
      ],
      "name": "setDefaultAllocationSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "8": "contracts/Whitelist.sol"
  },
  "ast": {
    "absolutePath": "contracts/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        1597
      ]
    },
    "id": 1598,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1428,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Whitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1597,
        "linearizedBaseContracts": [
          1597
        ],
        "name": "Whitelist",
        "nameLocation": "67:9:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9b19251a",
            "id": 1432,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "120:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1597,
            "src": "84:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1431,
              "keyType": {
                "id": 1429,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "93:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "84:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1430,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "104:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "389d78f1",
            "id": 1436,
            "mutability": "mutable",
            "name": "allocationSizes",
            "nameLocation": "171:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1597,
            "src": "135:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1435,
              "keyType": {
                "id": 1433,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "144:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "135:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1434,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "155:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c2d48d2",
            "id": 1438,
            "mutability": "mutable",
            "name": "defaultAllocationSize",
            "nameLocation": "208:21:8",
            "nodeType": "VariableDeclaration",
            "scope": 1597,
            "src": "193:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1437,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "193:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5462870d",
            "id": 1440,
            "mutability": "mutable",
            "name": "multisigAddress",
            "nameLocation": "250:15:8",
            "nodeType": "VariableDeclaration",
            "scope": 1597,
            "src": "235:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1439,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab03",
            "id": 1444,
            "name": "AddedToWhitelist",
            "nameLocation": "278:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "311:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1444,
                  "src": "295:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:25:8"
            },
            "src": "272:48:8"
          },
          {
            "anonymous": false,
            "eventSelector": "cdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df757",
            "id": 1448,
            "name": "RemovedFromWhitelist",
            "nameLocation": "331:20:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1446,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "368:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "352:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:25:8"
            },
            "src": "325:52:8"
          },
          {
            "anonymous": false,
            "eventSelector": "0097f043a36b6f38f6336741a5cabfadabd02d0ba3c0308e608df91d61d59dda",
            "id": 1456,
            "name": "ChangedMaxAllocationSize",
            "nameLocation": "388:24:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "438:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "422:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1452,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldMaxAllocationSize",
                  "nameLocation": "464:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "456:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1454,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMaxAllocationSize",
                  "nameLocation": "503:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "495:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:112:8"
            },
            "src": "382:143:8"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "569:51:8",
              "statements": [
                {
                  "expression": {
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1461,
                      "name": "multisigAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "579:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1462,
                      "name": "multisigAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "597:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "579:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "579:34:8"
                }
              ]
            },
            "id": 1466,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1458,
                  "mutability": "mutable",
                  "name": "multisigAddress_",
                  "nameLocation": "551:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "543:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:26:8"
            },
            "returnParameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:8"
            },
            "scope": 1597,
            "src": "531:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1476,
              "nodeType": "Block",
              "src": "644:66:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "662:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "662:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1471,
                          "name": "multisigAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1440,
                          "src": "676:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "662:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "654:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "654:38:8"
                },
                {
                  "id": 1475,
                  "nodeType": "PlaceholderStatement",
                  "src": "702:1:8"
                }
              ]
            },
            "id": 1477,
            "name": "multisig",
            "nameLocation": "635:8:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:8"
            },
            "src": "626:84:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1511,
              "nodeType": "Block",
              "src": "788:232:8",
              "statements": [
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "798:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1488,
                      "indexExpression": {
                        "id": 1487,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "808:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "798:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "820:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "798:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "798:26:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1492,
                        "name": "allocationSize_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "838:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "857:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "838:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1495,
                        "name": "allocationSize_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "862:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 1496,
                        "name": "defaultAllocationSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "881:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "862:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "838:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1506,
                  "nodeType": "IfStatement",
                  "src": "834:138:8",
                  "trueBody": {
                    "id": 1505,
                    "nodeType": "Block",
                    "src": "904:68:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1499,
                              "name": "allocationSizes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1436,
                              "src": "918:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1501,
                            "indexExpression": {
                              "id": 1500,
                              "name": "address_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "934:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "918:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1502,
                            "name": "allocationSize_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "946:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "918:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1504,
                        "nodeType": "ExpressionStatement",
                        "src": "918:43:8"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1508,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1004:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1507,
                      "name": "AddedToWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "987:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:26:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "EmitStatement",
                  "src": "982:31:8"
                }
              ]
            },
            "functionSelector": "f5d82b6b",
            "id": 1512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1483,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1477,
                  "src": "779:8:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "779:8:8"
              }
            ],
            "name": "add",
            "nameLocation": "725:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "address_",
                  "nameLocation": "737:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1512,
                  "src": "729:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "allocationSize_",
                  "nameLocation": "755:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1512,
                  "src": "747:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "728:43:8"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:8"
            },
            "scope": 1597,
            "src": "716:304:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1540,
              "nodeType": "Block",
              "src": "1076:199:8",
              "statements": [
                {
                  "expression": {
                    "id": 1522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1086:26:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1519,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1432,
                        "src": "1093:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1521,
                      "indexExpression": {
                        "id": 1520,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1514,
                        "src": "1103:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1093:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1523,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:26:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1524,
                        "name": "allocationSizes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "1126:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1526,
                      "indexExpression": {
                        "id": 1525,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1514,
                        "src": "1142:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1126:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1155:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1126:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1535,
                  "nodeType": "IfStatement",
                  "src": "1122:93:8",
                  "trueBody": {
                    "id": 1534,
                    "nodeType": "Block",
                    "src": "1158:57:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1172:32:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1529,
                              "name": "allocationSizes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1436,
                              "src": "1179:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1531,
                            "indexExpression": {
                              "id": 1530,
                              "name": "address_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "1195:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1179:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1533,
                        "nodeType": "ExpressionStatement",
                        "src": "1172:32:8"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1537,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1514,
                        "src": "1259:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1536,
                      "name": "RemovedFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "1238:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1238:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "EmitStatement",
                  "src": "1233:35:8"
                }
              ]
            },
            "functionSelector": "29092d0e",
            "id": 1541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1516,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1477,
                  "src": "1067:8:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:8:8"
              }
            ],
            "name": "remove",
            "nameLocation": "1035:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1514,
                  "mutability": "mutable",
                  "name": "address_",
                  "nameLocation": "1050:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1541,
                  "src": "1042:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:18:8"
            },
            "returnParameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:8"
            },
            "scope": 1597,
            "src": "1026:249:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "1376:329:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1551,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "1394:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1553,
                          "indexExpression": {
                            "id": 1552,
                            "name": "address_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1543,
                            "src": "1404:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1394:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1417:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1394:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c69737420646f6573206e6f7420636f6e7461696e2070726f76696465642061646472657373",
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a55f89f5acb46cbfebbd3503933de2f58d99b2208971d126bacde2c64a477ce9",
                          "typeString": "literal_string \"Whitelist does not contain provided address\""
                        },
                        "value": "Whitelist does not contain provided address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a55f89f5acb46cbfebbd3503933de2f58d99b2208971d126bacde2c64a477ce9",
                          "typeString": "literal_string \"Whitelist does not contain provided address\""
                        }
                      ],
                      "id": 1550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1386:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:83:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "1386:83:8"
                },
                {
                  "assignments": [
                    1560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1560,
                      "mutability": "mutable",
                      "name": "oldMaxAllocationSize",
                      "nameLocation": "1496:20:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1577,
                      "src": "1488:28:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1559,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1488:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1564,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1561,
                      "name": "allocationSizes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
                      "src": "1519:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1563,
                    "indexExpression": {
                      "id": 1562,
                      "name": "address_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "1535:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1519:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1488:56:8"
                },
                {
                  "expression": {
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1565,
                        "name": "allocationSizes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "1554:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1567,
                      "indexExpression": {
                        "id": 1566,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1570:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1554:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1568,
                      "name": "newMaxAllocationSize_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1545,
                      "src": "1582:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1554:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1570,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:49:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1572,
                        "name": "address_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "1644:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1573,
                        "name": "oldMaxAllocationSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1560,
                        "src": "1654:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1574,
                        "name": "newMaxAllocationSize_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1545,
                        "src": "1676:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1571,
                      "name": "ChangedMaxAllocationSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "1619:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:79:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1576,
                  "nodeType": "EmitStatement",
                  "src": "1614:84:8"
                }
              ]
            },
            "functionSelector": "7856ddb4",
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1547,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1477,
                  "src": "1367:8:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1367:8:8"
              }
            ],
            "name": "changeAllocationSize",
            "nameLocation": "1290:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1543,
                  "mutability": "mutable",
                  "name": "address_",
                  "nameLocation": "1319:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "1311:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "newMaxAllocationSize_",
                  "nameLocation": "1337:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "1329:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:49:8"
            },
            "returnParameters": {
              "id": 1549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1376:0:8"
            },
            "scope": 1597,
            "src": "1281:424:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "1786:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1586,
                          "name": "allocationSize_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1580,
                          "src": "1804:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1822:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1804:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1796:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:28:8"
                },
                {
                  "expression": {
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1591,
                      "name": "defaultAllocationSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
                      "src": "1835:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1592,
                      "name": "allocationSize_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
                      "src": "1859:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1835:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "1835:39:8"
                }
              ]
            },
            "functionSelector": "fc18f622",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1582,
                  "name": "multisig",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1477,
                  "src": "1777:8:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:8:8"
              }
            ],
            "name": "setDefaultAllocationSize",
            "nameLocation": "1720:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "allocationSize_",
                  "nameLocation": "1753:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "1745:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:25:8"
            },
            "returnParameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:8"
            },
            "scope": 1597,
            "src": "1711:170:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1598,
        "src": "58:1825:8",
        "usedErrors": []
      }
    ],
    "src": "33:1850:8"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161051c38038061051c83398101604081905261002f91610054565b600380546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610489806100936000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637856ddb41161005b5780637856ddb4146101095780639b19251a1461011c578063f5d82b6b1461014f578063fc18f6221461016257600080fd5b806329092d0e1461008d578063389d78f1146100a25780633c2d48d2146100d55780635462870d146100de575b600080fd5b6100a061009b3660046103ee565b610175565b005b6100c26100b03660046103ee565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c260025481565b6003546100f1906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b6100a0610117366004610410565b61020b565b61013f61012a3660046103ee565b60006020819052908152604090205460ff1681565b60405190151581526020016100cc565b6100a061015d366004610410565b610305565b6100a061017036600461043a565b6103a9565b6003546001600160a01b0316331461018c57600080fd5b6001600160a01b038116600090815260208181526040808320805460ff191690556001909152902054156101d4576001600160a01b0381166000908152600160205260408120555b6040516001600160a01b038216907fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df75790600090a250565b6003546001600160a01b0316331461022257600080fd5b6001600160a01b03821660009081526020819052604090205460ff1615156001146102a75760405162461bcd60e51b815260206004820152602b60248201527f57686974656c69737420646f6573206e6f7420636f6e7461696e2070726f766960448201526a646564206164647265737360a81b606482015260840160405180910390fd5b6001600160a01b038216600081815260016020908152604091829020805490859055825181815291820185905292917e97f043a36b6f38f6336741a5cabfadabd02d0ba3c0308e608df91d61d59dda910160405180910390a2505050565b6003546001600160a01b0316331461031c57600080fd5b6001600160a01b0382166000908152602081905260409020805460ff19166001179055801580159061035057506002548114155b15610371576001600160a01b03821660009081526001602052604090208190555b6040516001600160a01b038316907fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab0390600090a25050565b6003546001600160a01b031633146103c057600080fd5b600081116103cd57600080fd5b600255565b80356001600160a01b03811681146103e957600080fd5b919050565b60006020828403121561040057600080fd5b610409826103d2565b9392505050565b6000806040838503121561042357600080fd5b61042c836103d2565b946020939093013593505050565b60006020828403121561044c57600080fd5b503591905056fea2646970667358221220424348e0751935d3fcda0e484ab2cee507bef22a5ff8cc1538209ab3598f516464736f6c634300080e0033",
  "bytecodeSha1": "22dd9dd86ff0b245f6bc4ce2e80638288bc7a77f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Whitelist",
  "coverageMap": {
    "branches": {
      "8": {
        "Whitelist.add": {
          "13": [
            838,
            858,
            false
          ],
          "14": [
            862,
            902,
            false
          ]
        },
        "Whitelist.changeAllocationSize": {
          "12": [
            1394,
            1421,
            true
          ]
        },
        "Whitelist.remove": {
          "11": [
            1126,
            1156,
            false
          ]
        },
        "Whitelist.setDefaultAllocationSize": {
          "15": [
            1804,
            1823,
            true
          ]
        }
      }
    },
    "statements": {
      "8": {
        "Whitelist.add": {
          "6": [
            798,
            824
          ],
          "7": [
            918,
            961
          ],
          "8": [
            982,
            1013
          ]
        },
        "Whitelist.changeAllocationSize": {
          "3": [
            1386,
            1469
          ],
          "4": [
            1554,
            1603
          ],
          "5": [
            1614,
            1698
          ]
        },
        "Whitelist.remove": {
          "0": [
            1086,
            1112
          ],
          "1": [
            1172,
            1204
          ],
          "2": [
            1233,
            1268
          ]
        },
        "Whitelist.setDefaultAllocationSize": {
          "9": [
            1796,
            1824
          ],
          "10": [
            1835,
            1874
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80637856ddb41161005b5780637856ddb4146101095780639b19251a1461011c578063f5d82b6b1461014f578063fc18f6221461016257600080fd5b806329092d0e1461008d578063389d78f1146100a25780633c2d48d2146100d55780635462870d146100de575b600080fd5b6100a061009b3660046103ee565b610175565b005b6100c26100b03660046103ee565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100c260025481565b6003546100f1906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b6100a0610117366004610410565b61020b565b61013f61012a3660046103ee565b60006020819052908152604090205460ff1681565b60405190151581526020016100cc565b6100a061015d366004610410565b610305565b6100a061017036600461043a565b6103a9565b6003546001600160a01b0316331461018c57600080fd5b6001600160a01b038116600090815260208181526040808320805460ff191690556001909152902054156101d4576001600160a01b0381166000908152600160205260408120555b6040516001600160a01b038216907fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df75790600090a250565b6003546001600160a01b0316331461022257600080fd5b6001600160a01b03821660009081526020819052604090205460ff1615156001146102a75760405162461bcd60e51b815260206004820152602b60248201527f57686974656c69737420646f6573206e6f7420636f6e7461696e2070726f766960448201526a646564206164647265737360a81b606482015260840160405180910390fd5b6001600160a01b038216600081815260016020908152604091829020805490859055825181815291820185905292917e97f043a36b6f38f6336741a5cabfadabd02d0ba3c0308e608df91d61d59dda910160405180910390a2505050565b6003546001600160a01b0316331461031c57600080fd5b6001600160a01b0382166000908152602081905260409020805460ff19166001179055801580159061035057506002548114155b15610371576001600160a01b03821660009081526001602052604090208190555b6040516001600160a01b038316907fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab0390600090a25050565b6003546001600160a01b031633146103c057600080fd5b600081116103cd57600080fd5b600255565b80356001600160a01b03811681146103e957600080fd5b919050565b60006020828403121561040057600080fd5b610409826103d2565b9392505050565b6000806040838503121561042357600080fd5b61042c836103d2565b946020939093013593505050565b60006020828403121561044c57600080fd5b503591905056fea2646970667358221220424348e0751935d3fcda0e484ab2cee507bef22a5ff8cc1538209ab3598f516464736f6c634300080e0033",
  "deployedSourceMap": "58:1825:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:249;;;;;;:::i;:::-;;:::i;:::-;;135:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:9;;;517:2;502:18;135:51:8;;;;;;;;193:36;;;;;;235:30;;;;;-1:-1:-1;;;;;235:30:8;;;;;;-1:-1:-1;;;;;729:32:9;;;711:51;;699:2;684:18;235:30:8;565:203:9;1281:424:8;;;;;;:::i;:::-;;:::i;84:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1197:14:9;;1190:22;1172:41;;1160:2;1145:18;84:45:8;1032:187:9;716:304:8;;;;;;:::i;:::-;;:::i;1711:170::-;;;;;;:::i;:::-;;:::i;1026:249::-;676:15;;-1:-1:-1;;;;;676:15:8;662:10;:29;654:38;;;;;;-1:-1:-1;;;;;1093:19:8;::::1;:9;:19:::0;;;::::1;::::0;;;;;;;1086:26;;-1:-1:-1;;1086:26:8::1;::::0;;;1126:25;;;;;;:30;1122:93:::1;;-1:-1:-1::0;;;;;1179:25:8;::::1;;::::0;;;:15:::1;:25;::::0;;;;1172:32;1122:93:::1;1238:30;::::0;-1:-1:-1;;;;;1238:30:8;::::1;::::0;::::1;::::0;;;::::1;1026:249:::0;:::o;1281:424::-;676:15;;-1:-1:-1;;;;;676:15:8;662:10;:29;654:38;;;;;;-1:-1:-1;;;;;1394:19:8;::::1;:9;:19:::0;;;::::1;::::0;;;;;;;::::1;;:27;;:19:::0;:27:::1;1386:83;;;::::0;-1:-1:-1;;;1386:83:8;;1611:2:9;1386:83:8::1;::::0;::::1;1593:21:9::0;1650:2;1630:18;;;1623:30;1689:34;1669:18;;;1662:62;-1:-1:-1;;;1740:18:9;;;1733:41;1791:19;;1386:83:8::1;;;;;;;;-1:-1:-1::0;;;;;1519:25:8;::::1;1488:28;1519:25:::0;;;:15:::1;:25;::::0;;;;;;;;;;1554:49;;;;1619:79;;1995:25:9;;;2036:18;;;2029:34;;;1519:25:8;;1619:79:::1;::::0;1968:18:9;1619:79:8::1;;;;;;;1376:329;1281:424:::0;;:::o;716:304::-;676:15;;-1:-1:-1;;;;;676:15:8;662:10;:29;654:38;;;;;;-1:-1:-1;;;;;798:19:8;::::1;:9;:19:::0;;;::::1;::::0;;;;;;:26;;-1:-1:-1;;798:26:8::1;820:4;798:26;::::0;;838:20;;;::::1;::::0;:64:::1;;;881:21;;862:15;:40;;838:64;834:138;;;-1:-1:-1::0;;;;;918:25:8;::::1;;::::0;;;:15:::1;:25;::::0;;;;:43;;;834:138:::1;987:26;::::0;-1:-1:-1;;;;;987:26:8;::::1;::::0;::::1;::::0;;;::::1;716:304:::0;;:::o;1711:170::-;676:15;;-1:-1:-1;;;;;676:15:8;662:10;:29;654:38;;;;;;1822:1:::1;1804:15;:19;1796:28;;;::::0;::::1;;1835:21;:39:::0;1711:170::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:9:o;773:254::-;841:6;849;902:2;890:9;881:7;877:23;873:32;870:52;;;918:1;915;908:12;870:52;941:29;960:9;941:29;:::i;:::-;931:39;1017:2;1002:18;;;;989:32;;-1:-1:-1;;;773:254:9:o;1224:180::-;1283:6;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;-1:-1:-1;1375:23:9;;1224:180;-1:-1:-1;1224:180:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    1883
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7856DDB4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7856DDB4 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF5D82B6B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xFC18F622 EQ PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29092D0E EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x389D78F1 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x3C2D48D2 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x3EE JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xF1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x20B JUMP JUMPDEST PUSH2 0x13F PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x410 JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x43A JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCDD2E9B91A56913D370075169CEFA1602BA36BE5301664F752192BB1709DF757 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57686974656C69737420646F6573206E6F7420636F6E7461696E2070726F7669 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6465642061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 DUP6 SWAP1 SSTORE DUP3 MLOAD DUP2 DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 SWAP2 PUSH31 0x97F043A36B6F38F6336741A5CABFADABD02D0BA3C0308E608DF91D61D59DDA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x350 JUMPI POP PUSH1 0x2 SLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x371 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xA850AE9193F515CBAE8D35E8925BD2BE26627FC91BCE650B8652ED254E9CAB03 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x409 DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42C DUP4 PUSH2 0x3D2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP NUMBER BASEFEE 0xE0 PUSH22 0x1935D3FCDA0E484AB2CEE507BEF22A5FF8CC1538209A 0xB3 MSIZE DUP16 MLOAD PUSH5 0x64736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7856DDB4"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7856DDB4"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x109"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x9B19251A"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11C"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF5D82B6B"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFC18F622"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x162"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "90": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "REVERT",
      "path": "8"
    },
    "91": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "92": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x29092D0E"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x389D78F1"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA2"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3C2D48D2"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD5"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5462870D"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "DUP1",
      "path": "8"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        1883
      ],
      "op": "REVERT",
      "path": "8"
    },
    "141": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "142": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0"
    },
    "145": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9B"
    },
    "148": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "149": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "151": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EE"
    },
    "154": {
      "fn": "Whitelist.remove",
      "jump": "i",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMP",
      "path": "8"
    },
    "155": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "156": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x175"
    },
    "159": {
      "fn": "Whitelist.remove",
      "jump": "i",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMP",
      "path": "8"
    },
    "160": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "161": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "STOP",
      "path": "8"
    },
    "162": {
      "offset": [
        135,
        186
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "163": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC2"
    },
    "166": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB0"
    },
    "169": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "170": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "172": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EE"
    },
    "175": {
      "fn": "Whitelist.remove",
      "jump": "i",
      "offset": [
        135,
        186
      ],
      "op": "JUMP",
      "path": "8"
    },
    "176": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "177": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "179": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "181": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "182": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "184": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "185": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "DUP2",
      "path": "8"
    },
    "186": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "187": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "189": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "190": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "191": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "192": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "DUP2",
      "path": "8"
    },
    "193": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "JUMP",
      "path": "8"
    },
    "194": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "195": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "197": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "198": {
      "op": "SWAP1"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "offset": [
        135,
        186
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "205": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "207": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "208": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "DUP1",
      "path": "8"
    },
    "209": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "210": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SUB",
      "path": "8"
    },
    "211": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "212": {
      "fn": "Whitelist.remove",
      "offset": [
        135,
        186
      ],
      "op": "RETURN",
      "path": "8"
    },
    "213": {
      "offset": [
        193,
        229
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "214": {
      "fn": "Whitelist.remove",
      "offset": [
        193,
        229
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC2"
    },
    "217": {
      "fn": "Whitelist.remove",
      "offset": [
        193,
        229
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "219": {
      "fn": "Whitelist.remove",
      "offset": [
        193,
        229
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "220": {
      "fn": "Whitelist.remove",
      "offset": [
        193,
        229
      ],
      "op": "DUP2",
      "path": "8"
    },
    "221": {
      "fn": "Whitelist.remove",
      "offset": [
        193,
        229
      ],
      "op": "JUMP",
      "path": "8"
    },
    "222": {
      "offset": [
        235,
        265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "223": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "225": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "226": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF1"
    },
    "229": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "236": {
      "op": "SHL"
    },
    "237": {
      "op": "SUB"
    },
    "238": {
      "offset": [
        235,
        265
      ],
      "op": "AND",
      "path": "8"
    },
    "239": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "DUP2",
      "path": "8"
    },
    "240": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "JUMP",
      "path": "8"
    },
    "241": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "242": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "244": {
      "fn": "Whitelist.remove",
      "offset": [
        235,
        265
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "251": {
      "op": "SHL"
    },
    "252": {
      "op": "SUB"
    },
    "253": {
      "op": "SWAP1"
    },
    "254": {
      "op": "SWAP2"
    },
    "255": {
      "op": "AND"
    },
    "256": {
      "op": "DUP2"
    },
    "257": {
      "op": "MSTORE"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "260": {
      "op": "ADD"
    },
    "261": {
      "offset": [
        235,
        265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCC"
    },
    "264": {
      "op": "JUMP"
    },
    "265": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "266": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0"
    },
    "269": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x117"
    },
    "272": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "273": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "275": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x410"
    },
    "278": {
      "fn": "Whitelist.changeAllocationSize",
      "jump": "i",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMP",
      "path": "8"
    },
    "279": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "280": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20B"
    },
    "283": {
      "fn": "Whitelist.changeAllocationSize",
      "jump": "i",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMP",
      "path": "8"
    },
    "284": {
      "offset": [
        84,
        129
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "285": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13F"
    },
    "288": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12A"
    },
    "291": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "292": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "294": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EE"
    },
    "297": {
      "fn": "Whitelist.changeAllocationSize",
      "jump": "i",
      "offset": [
        84,
        129
      ],
      "op": "JUMP",
      "path": "8"
    },
    "298": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "299": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "301": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "303": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "304": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "305": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "306": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "307": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "308": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "309": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "311": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "312": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "313": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "314": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "316": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "AND",
      "path": "8"
    },
    "317": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "DUP2",
      "path": "8"
    },
    "318": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "JUMP",
      "path": "8"
    },
    "319": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "320": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "322": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        84,
        129
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "ISZERO"
    },
    "325": {
      "op": "ISZERO"
    },
    "326": {
      "op": "DUP2"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "offset": [
        84,
        129
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCC"
    },
    "334": {
      "op": "JUMP"
    },
    "335": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "336": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0"
    },
    "339": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15D"
    },
    "342": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "343": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "345": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x410"
    },
    "348": {
      "fn": "Whitelist.add",
      "jump": "i",
      "offset": [
        716,
        1020
      ],
      "op": "JUMP",
      "path": "8"
    },
    "349": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "350": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x305"
    },
    "353": {
      "fn": "Whitelist.add",
      "jump": "i",
      "offset": [
        716,
        1020
      ],
      "op": "JUMP",
      "path": "8"
    },
    "354": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "355": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA0"
    },
    "358": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x170"
    },
    "361": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "362": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "364": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x43A"
    },
    "367": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "jump": "i",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMP",
      "path": "8"
    },
    "368": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "369": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3A9"
    },
    "372": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "jump": "i",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMP",
      "path": "8"
    },
    "373": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "374": {
      "offset": [
        676,
        691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "376": {
      "fn": "Whitelist.remove",
      "offset": [
        676,
        691
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "op": "SUB"
    },
    "385": {
      "offset": [
        676,
        691
      ],
      "op": "AND",
      "path": "8"
    },
    "386": {
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "8"
    },
    "387": {
      "offset": [
        662,
        691
      ],
      "op": "EQ",
      "path": "8"
    },
    "388": {
      "offset": [
        654,
        692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18C"
    },
    "391": {
      "offset": [
        654,
        692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "392": {
      "fn": "Whitelist.remove",
      "offset": [
        654,
        692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "394": {
      "fn": "Whitelist.remove",
      "offset": [
        654,
        692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "395": {
      "fn": "Whitelist.remove",
      "offset": [
        654,
        692
      ],
      "op": "REVERT",
      "path": "8"
    },
    "396": {
      "fn": "Whitelist.remove",
      "offset": [
        654,
        692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "op": "SUB"
    },
    "405": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 0
    },
    "406": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "AND",
      "path": "8"
    },
    "407": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1102
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "409": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "410": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "411": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "412": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "414": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "415": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP2",
      "path": "8"
    },
    "416": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "417": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "419": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "420": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "DUP4",
      "path": "8"
    },
    "421": {
      "fn": "Whitelist.remove",
      "offset": [
        1093,
        1112
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "422": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "DUP1",
      "path": "8"
    },
    "423": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "424": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "426": {
      "op": "NOT"
    },
    "427": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "AND",
      "path": "8"
    },
    "428": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "429": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "430": {
      "fn": "Whitelist.remove",
      "offset": [
        1086,
        1112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "432": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "433": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "434": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "435": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "436": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "437": {
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1151
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "438": {
      "branch": 11,
      "fn": "Whitelist.remove",
      "offset": [
        1126,
        1156
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "439": {
      "fn": "Whitelist.remove",
      "offset": [
        1122,
        1215
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D4"
    },
    "442": {
      "branch": 11,
      "fn": "Whitelist.remove",
      "offset": [
        1122,
        1215
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 1
    },
    "452": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "AND",
      "path": "8"
    },
    "453": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "455": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "456": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "DUP2",
      "path": "8"
    },
    "457": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "458": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1194
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "460": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "462": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "463": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "465": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "DUP2",
      "path": "8"
    },
    "466": {
      "fn": "Whitelist.remove",
      "offset": [
        1179,
        1204
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "467": {
      "fn": "Whitelist.remove",
      "offset": [
        1172,
        1204
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "468": {
      "fn": "Whitelist.remove",
      "offset": [
        1122,
        1215
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "469": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x40"
    },
    "471": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "SUB"
    },
    "480": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "DUP3",
      "path": "8"
    },
    "481": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "AND",
      "path": "8"
    },
    "482": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "483": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xCDD2E9B91A56913D370075169CEFA1602BA36BE5301664F752192BB1709DF757"
    },
    "516": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "517": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "519": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "520": {
      "fn": "Whitelist.remove",
      "offset": [
        1238,
        1268
      ],
      "op": "LOG2",
      "path": "8"
    },
    "521": {
      "fn": "Whitelist.remove",
      "offset": [
        1026,
        1275
      ],
      "op": "POP",
      "path": "8"
    },
    "522": {
      "fn": "Whitelist.remove",
      "jump": "o",
      "offset": [
        1026,
        1275
      ],
      "op": "JUMP",
      "path": "8"
    },
    "523": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "524": {
      "offset": [
        676,
        691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "526": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        676,
        691
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "SUB"
    },
    "535": {
      "offset": [
        676,
        691
      ],
      "op": "AND",
      "path": "8"
    },
    "536": {
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "8"
    },
    "537": {
      "offset": [
        662,
        691
      ],
      "op": "EQ",
      "path": "8"
    },
    "538": {
      "offset": [
        654,
        692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x222"
    },
    "541": {
      "offset": [
        654,
        692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "542": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "544": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "545": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "REVERT",
      "path": "8"
    },
    "546": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "SUB"
    },
    "555": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 3
    },
    "556": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "AND",
      "path": "8"
    },
    "557": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1403
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "559": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "560": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "561": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "562": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "564": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "565": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "566": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "567": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "569": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "570": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "571": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "572": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xFF"
    },
    "574": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "AND",
      "path": "8"
    },
    "575": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "576": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1421
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "577": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "579": {
      "branch": 12,
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1394,
        1421
      ],
      "op": "EQ",
      "path": "8"
    },
    "580": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A7"
    },
    "583": {
      "branch": 12,
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "584": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "586": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "DUP2",
      "path": "8"
    },
    "595": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "598": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "600": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "DUP3",
      "path": "8"
    },
    "601": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "ADD",
      "path": "8"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH32",
      "value": "0x57686974656C69737420646F6573206E6F7420636F6E7461696E2070726F7669"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "645": {
      "op": "DUP3"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH11",
      "value": "0x6465642061646472657373"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "665": {
      "op": "DUP3"
    },
    "666": {
      "op": "ADD"
    },
    "667": {
      "op": "MSTORE"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "673": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "674": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "DUP1",
      "path": "8"
    },
    "675": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "676": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "SUB",
      "path": "8"
    },
    "677": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "678": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "679": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1386,
        1469
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "op": "SUB"
    },
    "688": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP3",
      "path": "8"
    },
    "689": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "AND",
      "path": "8"
    },
    "690": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1488,
        1516
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "692": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "693": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "694": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "695": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1534
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "697": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "699": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "700": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP2",
      "path": "8"
    },
    "701": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "702": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "704": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "705": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP3",
      "path": "8"
    },
    "706": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "707": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "708": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "DUP1",
      "path": "8"
    },
    "709": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "710": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1554,
        1603
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 4
    },
    "711": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1554,
        1603
      ],
      "op": "DUP6",
      "path": "8"
    },
    "712": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1554,
        1603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "713": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1554,
        1603
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "714": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 5
    },
    "715": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "716": {
      "op": "DUP2"
    },
    "717": {
      "op": "DUP2"
    },
    "718": {
      "op": "MSTORE"
    },
    "719": {
      "op": "SWAP2"
    },
    "720": {
      "op": "DUP3"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "DUP6"
    },
    "723": {
      "op": "SWAP1"
    },
    "724": {
      "op": "MSTORE"
    },
    "725": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "726": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1519,
        1544
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "727": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "PUSH31",
      "path": "8",
      "value": "0x97F043A36B6F38F6336741A5CABFADABD02D0BA3C0308E608DF91D61D59DDA"
    },
    "759": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "763": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "764": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "DUP1",
      "path": "8"
    },
    "765": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "766": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "SUB",
      "path": "8"
    },
    "767": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "768": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1619,
        1698
      ],
      "op": "LOG2",
      "path": "8"
    },
    "769": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1376,
        1705
      ],
      "op": "POP",
      "path": "8"
    },
    "770": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "POP",
      "path": "8"
    },
    "771": {
      "fn": "Whitelist.changeAllocationSize",
      "offset": [
        1281,
        1705
      ],
      "op": "POP",
      "path": "8"
    },
    "772": {
      "fn": "Whitelist.changeAllocationSize",
      "jump": "o",
      "offset": [
        1281,
        1705
      ],
      "op": "JUMP",
      "path": "8"
    },
    "773": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "774": {
      "offset": [
        676,
        691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "776": {
      "fn": "Whitelist.add",
      "offset": [
        676,
        691
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "offset": [
        676,
        691
      ],
      "op": "AND",
      "path": "8"
    },
    "786": {
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "8"
    },
    "787": {
      "offset": [
        662,
        691
      ],
      "op": "EQ",
      "path": "8"
    },
    "788": {
      "offset": [
        654,
        692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "791": {
      "offset": [
        654,
        692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "792": {
      "fn": "Whitelist.add",
      "offset": [
        654,
        692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "794": {
      "fn": "Whitelist.add",
      "offset": [
        654,
        692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "795": {
      "fn": "Whitelist.add",
      "offset": [
        654,
        692
      ],
      "op": "REVERT",
      "path": "8"
    },
    "796": {
      "fn": "Whitelist.add",
      "offset": [
        654,
        692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "op": "SUB"
    },
    "805": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 6
    },
    "806": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "AND",
      "path": "8"
    },
    "807": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        807
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "809": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "810": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "DUP2",
      "path": "8"
    },
    "811": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "812": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "814": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "DUP2",
      "path": "8"
    },
    "815": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "816": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "817": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "819": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "820": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        817
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "821": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "DUP1",
      "path": "8"
    },
    "822": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "825": {
      "op": "NOT"
    },
    "826": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "AND",
      "path": "8"
    },
    "827": {
      "fn": "Whitelist.add",
      "offset": [
        820,
        824
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "829": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "OR",
      "path": "8"
    },
    "830": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "831": {
      "fn": "Whitelist.add",
      "offset": [
        798,
        824
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "832": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "833": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        858
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "834": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        858
      ],
      "op": "DUP1",
      "path": "8"
    },
    "835": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        858
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "836": {
      "branch": 13,
      "fn": "Whitelist.add",
      "offset": [
        838,
        858
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "837": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        902
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x350"
    },
    "840": {
      "branch": 13,
      "fn": "Whitelist.add",
      "offset": [
        838,
        902
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "841": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        902
      ],
      "op": "POP",
      "path": "8"
    },
    "842": {
      "fn": "Whitelist.add",
      "offset": [
        881,
        902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "844": {
      "fn": "Whitelist.add",
      "offset": [
        881,
        902
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "845": {
      "fn": "Whitelist.add",
      "offset": [
        862,
        877
      ],
      "op": "DUP2",
      "path": "8"
    },
    "846": {
      "fn": "Whitelist.add",
      "offset": [
        862,
        902
      ],
      "op": "EQ",
      "path": "8"
    },
    "847": {
      "branch": 14,
      "fn": "Whitelist.add",
      "offset": [
        862,
        902
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "848": {
      "fn": "Whitelist.add",
      "offset": [
        838,
        902
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "849": {
      "fn": "Whitelist.add",
      "offset": [
        834,
        972
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "850": {
      "fn": "Whitelist.add",
      "offset": [
        834,
        972
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x371"
    },
    "853": {
      "branch": 14,
      "fn": "Whitelist.add",
      "offset": [
        834,
        972
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "860": {
      "op": "SHL"
    },
    "861": {
      "op": "SUB"
    },
    "862": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 7
    },
    "863": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "AND",
      "path": "8"
    },
    "864": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "866": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "867": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "DUP2",
      "path": "8"
    },
    "868": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "869": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        933
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "871": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "873": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "874": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "876": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "877": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        943
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "878": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        961
      ],
      "op": "DUP2",
      "path": "8"
    },
    "879": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        961
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "880": {
      "fn": "Whitelist.add",
      "offset": [
        918,
        961
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "881": {
      "fn": "Whitelist.add",
      "offset": [
        834,
        972
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "882": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 8,
      "value": "0x40"
    },
    "884": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "op": "SUB"
    },
    "893": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "DUP4",
      "path": "8"
    },
    "894": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "AND",
      "path": "8"
    },
    "895": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "896": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xA850AE9193F515CBAE8D35E8925BD2BE26627FC91BCE650B8652ED254E9CAB03"
    },
    "929": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "930": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "932": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "933": {
      "fn": "Whitelist.add",
      "offset": [
        987,
        1013
      ],
      "op": "LOG2",
      "path": "8"
    },
    "934": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "POP",
      "path": "8"
    },
    "935": {
      "fn": "Whitelist.add",
      "offset": [
        716,
        1020
      ],
      "op": "POP",
      "path": "8"
    },
    "936": {
      "fn": "Whitelist.add",
      "jump": "o",
      "offset": [
        716,
        1020
      ],
      "op": "JUMP",
      "path": "8"
    },
    "937": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "938": {
      "offset": [
        676,
        691
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "940": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        676,
        691
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "op": "SUB"
    },
    "949": {
      "offset": [
        676,
        691
      ],
      "op": "AND",
      "path": "8"
    },
    "950": {
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "8"
    },
    "951": {
      "offset": [
        662,
        691
      ],
      "op": "EQ",
      "path": "8"
    },
    "952": {
      "offset": [
        654,
        692
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3C0"
    },
    "955": {
      "offset": [
        654,
        692
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "956": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "958": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "DUP1",
      "path": "8"
    },
    "959": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "REVERT",
      "path": "8"
    },
    "960": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        654,
        692
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "961": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1822,
        1823
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x0"
    },
    "963": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1804,
        1819
      ],
      "op": "DUP2",
      "path": "8"
    },
    "964": {
      "branch": 15,
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1804,
        1823
      ],
      "op": "GT",
      "path": "8"
    },
    "965": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3CD"
    },
    "968": {
      "branch": 15,
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "969": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "971": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "DUP1",
      "path": "8"
    },
    "972": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "REVERT",
      "path": "8"
    },
    "973": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1796,
        1824
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "974": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1835,
        1856
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x2"
    },
    "976": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "offset": [
        1835,
        1874
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "977": {
      "fn": "Whitelist.setDefaultAllocationSize",
      "jump": "o",
      "offset": [
        1711,
        1881
      ],
      "op": "JUMP",
      "path": "8"
    },
    "978": {
      "op": "JUMPDEST"
    },
    "979": {
      "op": "DUP1"
    },
    "980": {
      "op": "CALLDATALOAD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "987": {
      "op": "SHL"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "op": "DUP2"
    },
    "990": {
      "op": "AND"
    },
    "991": {
      "op": "DUP2"
    },
    "992": {
      "op": "EQ"
    },
    "993": {
      "op": "PUSH2",
      "value": "0x3E9"
    },
    "996": {
      "op": "JUMPI"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "999": {
      "op": "DUP1"
    },
    "1000": {
      "op": "REVERT"
    },
    "1001": {
      "op": "JUMPDEST"
    },
    "1002": {
      "op": "SWAP2"
    },
    "1003": {
      "op": "SWAP1"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "jump": "o",
      "op": "JUMP"
    },
    "1006": {
      "op": "JUMPDEST"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "DUP5"
    },
    "1013": {
      "op": "SUB"
    },
    "1014": {
      "op": "SLT"
    },
    "1015": {
      "op": "ISZERO"
    },
    "1016": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "1019": {
      "op": "JUMPI"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1022": {
      "op": "DUP1"
    },
    "1023": {
      "op": "REVERT"
    },
    "1024": {
      "op": "JUMPDEST"
    },
    "1025": {
      "op": "PUSH2",
      "value": "0x409"
    },
    "1028": {
      "op": "DUP3"
    },
    "1029": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "1032": {
      "jump": "i",
      "op": "JUMP"
    },
    "1033": {
      "op": "JUMPDEST"
    },
    "1034": {
      "op": "SWAP4"
    },
    "1035": {
      "op": "SWAP3"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "jump": "o",
      "op": "JUMP"
    },
    "1040": {
      "op": "JUMPDEST"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "DUP1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1046": {
      "op": "DUP4"
    },
    "1047": {
      "op": "DUP6"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "op": "SLT"
    },
    "1050": {
      "op": "ISZERO"
    },
    "1051": {
      "op": "PUSH2",
      "value": "0x423"
    },
    "1054": {
      "op": "JUMPI"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1057": {
      "op": "DUP1"
    },
    "1058": {
      "op": "REVERT"
    },
    "1059": {
      "op": "JUMPDEST"
    },
    "1060": {
      "op": "PUSH2",
      "value": "0x42C"
    },
    "1063": {
      "op": "DUP4"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x3D2"
    },
    "1067": {
      "jump": "i",
      "op": "JUMP"
    },
    "1068": {
      "op": "JUMPDEST"
    },
    "1069": {
      "op": "SWAP5"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1072": {
      "op": "SWAP4"
    },
    "1073": {
      "op": "SWAP1"
    },
    "1074": {
      "op": "SWAP4"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "CALLDATALOAD"
    },
    "1077": {
      "op": "SWAP4"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "jump": "o",
      "op": "JUMP"
    },
    "1082": {
      "op": "JUMPDEST"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "DUP5"
    },
    "1089": {
      "op": "SUB"
    },
    "1090": {
      "op": "SLT"
    },
    "1091": {
      "op": "ISZERO"
    },
    "1092": {
      "op": "PUSH2",
      "value": "0x44C"
    },
    "1095": {
      "op": "JUMPI"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "DUP1"
    },
    "1099": {
      "op": "REVERT"
    },
    "1100": {
      "op": "JUMPDEST"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "op": "CALLDATALOAD"
    },
    "1103": {
      "op": "SWAP2"
    },
    "1104": {
      "op": "SWAP1"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8f65145f9033aa9cc18279090719474db846250d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ncontract Whitelist {\n\n    mapping (address => bool)    public whitelist;\n    mapping (address => uint256) public allocationSizes;\n\n    uint256 public defaultAllocationSize;\n    address public multisigAddress;\n\n    event AddedToWhitelist(address indexed account);\n    event RemovedFromWhitelist(address indexed account);\n    event ChangedMaxAllocationSize(\n        address indexed account, \n        uint256 oldMaxAllocationSize, \n        uint256 newMaxAllocationSize);\n\n    constructor(address multisigAddress_) {\n        multisigAddress = multisigAddress_;\n    }\n\n    modifier multisig {\n        require(msg.sender == multisigAddress);\n        _;\n    }\n\n    function add(address address_, uint256 allocationSize_) public multisig {\n        whitelist[address_] = true;\n        if (allocationSize_ != 0 && allocationSize_ != defaultAllocationSize) {\n            allocationSizes[address_] = allocationSize_;\n        }\n\n        emit AddedToWhitelist(address_);\n    }\n\n    function remove(address address_) public multisig {\n        delete whitelist[address_];\n        if (allocationSizes[address_] != 0) {\n            delete allocationSizes[address_];\n        }\n        \n        emit RemovedFromWhitelist(address_);\n    }\n\n    function changeAllocationSize(address address_, uint256 newMaxAllocationSize_) public multisig {\n        require(whitelist[address_] == true, \"Whitelist does not contain provided address\");\n        \n        uint256 oldMaxAllocationSize = allocationSizes[address_];\n        allocationSizes[address_] = newMaxAllocationSize_;\n\n        emit ChangedMaxAllocationSize(address_, oldMaxAllocationSize, newMaxAllocationSize_);\n    }\n\n    function setDefaultAllocationSize(uint256 allocationSize_) public multisig {\n        require(allocationSize_ > 0);\n\n        defaultAllocationSize = allocationSize_;\n    }\n}",
  "sourceMap": "58:1825:8:-:0;;;531:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;579:15;:34;;-1:-1:-1;;;;;;579:34:8;-1:-1:-1;;;;;579:34:8;;;;;;;;;;58:1825;;14:290:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;58:1825:8;;;;;;",
  "sourcePath": "contracts/Whitelist.sol",
  "type": "contract"
}